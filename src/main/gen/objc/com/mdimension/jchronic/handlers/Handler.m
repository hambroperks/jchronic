//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jchronic/src/main/java/com/mdimension/jchronic/handlers/Handler.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/mdimension/jchronic/Options.h"
#include "com/mdimension/jchronic/handlers/Handler.h"
#include "com/mdimension/jchronic/handlers/HandlerPattern.h"
#include "com/mdimension/jchronic/handlers/HandlerTypePattern.h"
#include "com/mdimension/jchronic/handlers/IHandler.h"
#include "com/mdimension/jchronic/handlers/ORGRHandler.h"
#include "com/mdimension/jchronic/handlers/ORSRHandler.h"
#include "com/mdimension/jchronic/handlers/PSRHandler.h"
#include "com/mdimension/jchronic/handlers/RGRHandler.h"
#include "com/mdimension/jchronic/handlers/RHandler.h"
#include "com/mdimension/jchronic/handlers/RdnRmnSdTTzSyHandler.h"
#include "com/mdimension/jchronic/handlers/RmnOdHandler.h"
#include "com/mdimension/jchronic/handlers/RmnSdHandler.h"
#include "com/mdimension/jchronic/handlers/RmnSdSyHandler.h"
#include "com/mdimension/jchronic/handlers/RmnSyHandler.h"
#include "com/mdimension/jchronic/handlers/SRPAHandler.h"
#include "com/mdimension/jchronic/handlers/SRPHandler.h"
#include "com/mdimension/jchronic/handlers/SdRmnSyHandler.h"
#include "com/mdimension/jchronic/handlers/SdSmSyHandler.h"
#include "com/mdimension/jchronic/handlers/SmSdHandler.h"
#include "com/mdimension/jchronic/handlers/SmSdSyHandler.h"
#include "com/mdimension/jchronic/handlers/SmSyHandler.h"
#include "com/mdimension/jchronic/handlers/SySmSdHandler.h"
#include "com/mdimension/jchronic/handlers/TagPattern.h"
#include "com/mdimension/jchronic/repeaters/EnumRepeaterDayPortion.h"
#include "com/mdimension/jchronic/repeaters/IntegerRepeaterDayPortion.h"
#include "com/mdimension/jchronic/repeaters/Repeater.h"
#include "com/mdimension/jchronic/repeaters/RepeaterDayName.h"
#include "com/mdimension/jchronic/repeaters/RepeaterDayPortion.h"
#include "com/mdimension/jchronic/repeaters/RepeaterMonthName.h"
#include "com/mdimension/jchronic/repeaters/RepeaterTime.h"
#include "com/mdimension/jchronic/tags/Grabber.h"
#include "com/mdimension/jchronic/tags/Ordinal.h"
#include "com/mdimension/jchronic/tags/OrdinalDay.h"
#include "com/mdimension/jchronic/tags/Pointer.h"
#include "com/mdimension/jchronic/tags/Scalar.h"
#include "com/mdimension/jchronic/tags/ScalarDay.h"
#include "com/mdimension/jchronic/tags/ScalarMonth.h"
#include "com/mdimension/jchronic/tags/ScalarYear.h"
#include "com/mdimension/jchronic/tags/Separator.h"
#include "com/mdimension/jchronic/tags/SeparatorAt.h"
#include "com/mdimension/jchronic/tags/SeparatorComma.h"
#include "com/mdimension/jchronic/tags/SeparatorIn.h"
#include "com/mdimension/jchronic/tags/SeparatorSlashOrDash.h"
#include "com/mdimension/jchronic/tags/Tag.h"
#include "com/mdimension/jchronic/tags/TimeZone.h"
#include "com/mdimension/jchronic/utils/Span.h"
#include "com/mdimension/jchronic/utils/Tick.h"
#include "com/mdimension/jchronic/utils/Time.h"
#include "com/mdimension/jchronic/utils/Token.h"
#include "java/io/PrintStream.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/Calendar.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@interface ComMdimensionJchronicHandlersHandler () {
 @public
  IOSObjectArray *_patterns_;
  id<ComMdimensionJchronicHandlersIHandler> _handler_;
  jboolean _compatible_;
}

@end

J2OBJC_FIELD_SETTER(ComMdimensionJchronicHandlersHandler, _patterns_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComMdimensionJchronicHandlersHandler, _handler_, id<ComMdimensionJchronicHandlersIHandler>)

inline id<JavaUtilMap> ComMdimensionJchronicHandlersHandler_get__definitions(void);
inline id<JavaUtilMap> ComMdimensionJchronicHandlersHandler_set__definitions(id<JavaUtilMap> value);
static id<JavaUtilMap> ComMdimensionJchronicHandlersHandler__definitions;
J2OBJC_STATIC_FIELD_OBJ(ComMdimensionJchronicHandlersHandler, _definitions, id<JavaUtilMap>)

__attribute__((unused)) static void ComMdimensionJchronicHandlersHandler_HandlerType_initWithNSString_withInt_(ComMdimensionJchronicHandlersHandler_HandlerType *self, NSString *__name, jint __ordinal);

@implementation ComMdimensionJchronicHandlersHandler

- (instancetype __nonnull)initWithComMdimensionJchronicHandlersIHandler:(id<ComMdimensionJchronicHandlersIHandler>)handler
                   withComMdimensionJchronicHandlersHandlerPatternArray:(IOSObjectArray *)patterns {
  ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(self, handler, patterns);
  return self;
}

- (instancetype __nonnull)initWithComMdimensionJchronicHandlersIHandler:(id<ComMdimensionJchronicHandlersIHandler>)handler
                                                            withBoolean:(jboolean)compatible
                   withComMdimensionJchronicHandlersHandlerPatternArray:(IOSObjectArray *)patterns {
  ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withBoolean_withComMdimensionJchronicHandlersHandlerPatternArray_(self, handler, compatible, patterns);
  return self;
}

- (jboolean)isCompatibleWithComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options {
  return ![((ComMdimensionJchronicOptions *) nil_chk(options)) isCompatibilityMode] || _compatible_;
}

- (id<ComMdimensionJchronicHandlersIHandler>)getHandler {
  return _handler_;
}

- (jboolean)matchWithJavaUtilList:(id<JavaUtilList>)tokens
                  withJavaUtilMap:(id<JavaUtilMap>)definitions {
  jint tokenIndex = 0;
  {
    IOSObjectArray *a__ = _patterns_;
    ComMdimensionJchronicHandlersHandlerPattern * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ComMdimensionJchronicHandlersHandlerPattern * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ComMdimensionJchronicHandlersHandlerPattern *pattern = *b__++;
      jboolean optional = [((ComMdimensionJchronicHandlersHandlerPattern *) nil_chk(pattern)) isOptional];
      if ([pattern isKindOfClass:[ComMdimensionJchronicHandlersTagPattern class]]) {
        jboolean match = (tokenIndex < [((id<JavaUtilList>) nil_chk(tokens)) size] && [((id<JavaUtilList>) nil_chk([((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:tokenIndex])) getTagsWithIOSClass:[((ComMdimensionJchronicHandlersTagPattern *) cast_chk(pattern, [ComMdimensionJchronicHandlersTagPattern class])) getTagClass]])) size] > 0);
        if (!match && !optional) {
          return false;
        }
        if (match) {
          tokenIndex++;
        }
      }
      else if ([pattern isKindOfClass:[ComMdimensionJchronicHandlersHandlerTypePattern class]]) {
        if (optional && tokenIndex == [((id<JavaUtilList>) nil_chk(tokens)) size]) {
          return true;
        }
        id<JavaUtilList> subHandlers = [((id<JavaUtilMap>) nil_chk(definitions)) getWithId:[((ComMdimensionJchronicHandlersHandlerTypePattern *) cast_chk(pattern, [ComMdimensionJchronicHandlersHandlerTypePattern class])) getType]];
        for (ComMdimensionJchronicHandlersHandler * __strong subHandler in nil_chk(subHandlers)) {
          if ([((ComMdimensionJchronicHandlersHandler *) nil_chk(subHandler)) matchWithJavaUtilList:[((id<JavaUtilList>) nil_chk(tokens)) subListWithInt:tokenIndex withInt:[tokens size]] withJavaUtilMap:definitions]) {
            return true;
          }
        }
        return false;
      }
    }
  }
  if (tokenIndex != [((id<JavaUtilList>) nil_chk(tokens)) size]) {
    return false;
  }
  return true;
}

- (NSString *)description {
  return JreStrcat("$@C", @"[Handler: ", _handler_, ']');
}

+ (id<JavaUtilMap>)definitions {
  return ComMdimensionJchronicHandlersHandler_definitions();
}

+ (ComMdimensionJchronicUtilsSpan *)tokensToSpanWithJavaUtilList:(id<JavaUtilList>)tokens
                                withComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options {
  return ComMdimensionJchronicHandlersHandler_tokensToSpanWithJavaUtilList_withComMdimensionJchronicOptions_(tokens, options);
}

+ (id<JavaUtilList>)getRepeatersWithJavaUtilList:(id<JavaUtilList>)tokens {
  return ComMdimensionJchronicHandlersHandler_getRepeatersWithJavaUtilList_(tokens);
}

+ (ComMdimensionJchronicUtilsSpan *)getAnchorWithJavaUtilList:(id<JavaUtilList>)tokens
                             withComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options {
  return ComMdimensionJchronicHandlersHandler_getAnchorWithJavaUtilList_withComMdimensionJchronicOptions_(tokens, options);
}

+ (ComMdimensionJchronicUtilsSpan *)dayOrTimeWithJavaUtilCalendar:(JavaUtilCalendar *)dayStart
                                                 withJavaUtilList:(id<JavaUtilList>)timeTokens
                                 withComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options {
  return ComMdimensionJchronicHandlersHandler_dayOrTimeWithJavaUtilCalendar_withJavaUtilList_withComMdimensionJchronicOptions_(dayStart, timeTokens, options);
}

+ (ComMdimensionJchronicUtilsSpan *)findWithinWithJavaUtilList:(id<JavaUtilList>)tags
                            withComMdimensionJchronicUtilsSpan:(ComMdimensionJchronicUtilsSpan *)span
              withComMdimensionJchronicTagsPointer_PointerType:(ComMdimensionJchronicTagsPointer_PointerType *)pointer
                              withComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options {
  return ComMdimensionJchronicHandlersHandler_findWithinWithJavaUtilList_withComMdimensionJchronicUtilsSpan_withComMdimensionJchronicTagsPointer_PointerType_withComMdimensionJchronicOptions_(tags, span, pointer, options);
}

+ (id<JavaUtilList>)dealiasAndDisambiguateTimesWithJavaUtilList:(id<JavaUtilList>)tokens
                               withComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options {
  return ComMdimensionJchronicHandlersHandler_dealiasAndDisambiguateTimesWithJavaUtilList_withComMdimensionJchronicOptions_(tokens, options);
}

- (void)dealloc {
  RELEASE_(_patterns_);
  RELEASE_(_handler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x81, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LComMdimensionJchronicHandlersIHandler;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x29, -1, -1, -1, 8, -1, -1 },
    { NULL, "LComMdimensionJchronicUtilsSpan;", 0x9, 9, 10, -1, 11, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 12, 13, -1, 14, -1, -1 },
    { NULL, "LComMdimensionJchronicUtilsSpan;", 0x9, 15, 10, -1, 11, -1, -1 },
    { NULL, "LComMdimensionJchronicUtilsSpan;", 0x9, 16, 17, -1, 18, -1, -1 },
    { NULL, "LComMdimensionJchronicUtilsSpan;", 0x9, 19, 20, -1, 21, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 22, 10, -1, 23, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComMdimensionJchronicHandlersIHandler:withComMdimensionJchronicHandlersHandlerPatternArray:);
  methods[1].selector = @selector(initWithComMdimensionJchronicHandlersIHandler:withBoolean:withComMdimensionJchronicHandlersHandlerPatternArray:);
  methods[2].selector = @selector(isCompatibleWithComMdimensionJchronicOptions:);
  methods[3].selector = @selector(getHandler);
  methods[4].selector = @selector(matchWithJavaUtilList:withJavaUtilMap:);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(definitions);
  methods[7].selector = @selector(tokensToSpanWithJavaUtilList:withComMdimensionJchronicOptions:);
  methods[8].selector = @selector(getRepeatersWithJavaUtilList:);
  methods[9].selector = @selector(getAnchorWithJavaUtilList:withComMdimensionJchronicOptions:);
  methods[10].selector = @selector(dayOrTimeWithJavaUtilCalendar:withJavaUtilList:withComMdimensionJchronicOptions:);
  methods[11].selector = @selector(findWithinWithJavaUtilList:withComMdimensionJchronicUtilsSpan:withComMdimensionJchronicTagsPointer_PointerType:withComMdimensionJchronicOptions:);
  methods[12].selector = @selector(dealiasAndDisambiguateTimesWithJavaUtilList:withComMdimensionJchronicOptions:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_definitions", "LJavaUtilMap;", .constantValue.asLong = 0, 0xa, -1, 24, 25, -1 },
    { "_patterns_", "[LComMdimensionJchronicHandlersHandlerPattern;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_handler_", "LComMdimensionJchronicHandlersIHandler;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_compatible_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComMdimensionJchronicHandlersIHandler;[LComMdimensionJchronicHandlersHandlerPattern;", "LComMdimensionJchronicHandlersIHandler;Z[LComMdimensionJchronicHandlersHandlerPattern;", "isCompatible", "LComMdimensionJchronicOptions;", "match", "LJavaUtilList;LJavaUtilMap;", "(Ljava/util/List<Lcom/mdimension/jchronic/utils/Token;>;Ljava/util/Map<Lcom/mdimension/jchronic/handlers/Handler$HandlerType;Ljava/util/List<Lcom/mdimension/jchronic/handlers/Handler;>;>;)Z", "toString", "()Ljava/util/Map<Lcom/mdimension/jchronic/handlers/Handler$HandlerType;Ljava/util/List<Lcom/mdimension/jchronic/handlers/Handler;>;>;", "tokensToSpan", "LJavaUtilList;LComMdimensionJchronicOptions;", "(Ljava/util/List<Lcom/mdimension/jchronic/utils/Token;>;Lcom/mdimension/jchronic/Options;)Lcom/mdimension/jchronic/utils/Span;", "getRepeaters", "LJavaUtilList;", "(Ljava/util/List<Lcom/mdimension/jchronic/utils/Token;>;)Ljava/util/List<Lcom/mdimension/jchronic/repeaters/Repeater<*>;>;", "getAnchor", "dayOrTime", "LJavaUtilCalendar;LJavaUtilList;LComMdimensionJchronicOptions;", "(Ljava/util/Calendar;Ljava/util/List<Lcom/mdimension/jchronic/utils/Token;>;Lcom/mdimension/jchronic/Options;)Lcom/mdimension/jchronic/utils/Span;", "findWithin", "LJavaUtilList;LComMdimensionJchronicUtilsSpan;LComMdimensionJchronicTagsPointer_PointerType;LComMdimensionJchronicOptions;", "(Ljava/util/List<Lcom/mdimension/jchronic/repeaters/Repeater<*>;>;Lcom/mdimension/jchronic/utils/Span;Lcom/mdimension/jchronic/tags/Pointer$PointerType;Lcom/mdimension/jchronic/Options;)Lcom/mdimension/jchronic/utils/Span;", "dealiasAndDisambiguateTimes", "(Ljava/util/List<Lcom/mdimension/jchronic/utils/Token;>;Lcom/mdimension/jchronic/Options;)Ljava/util/List<Lcom/mdimension/jchronic/utils/Token;>;", &ComMdimensionJchronicHandlersHandler__definitions, "Ljava/util/Map<Lcom/mdimension/jchronic/handlers/Handler$HandlerType;Ljava/util/List<Lcom/mdimension/jchronic/handlers/Handler;>;>;", "LComMdimensionJchronicHandlersHandler_HandlerType;" };
  static const J2ObjcClassInfo _ComMdimensionJchronicHandlersHandler = { "Handler", "com.mdimension.jchronic.handlers", ptrTable, methods, fields, 7, 0x1, 13, 4, -1, 26, -1, -1, -1 };
  return &_ComMdimensionJchronicHandlersHandler;
}

@end

void ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(ComMdimensionJchronicHandlersHandler *self, id<ComMdimensionJchronicHandlersIHandler> handler, IOSObjectArray *patterns) {
  ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withBoolean_withComMdimensionJchronicHandlersHandlerPatternArray_(self, handler, true, patterns);
}

ComMdimensionJchronicHandlersHandler *new_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(id<ComMdimensionJchronicHandlersIHandler> handler, IOSObjectArray *patterns) {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicHandlersHandler, initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_, handler, patterns)
}

ComMdimensionJchronicHandlersHandler *create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(id<ComMdimensionJchronicHandlersIHandler> handler, IOSObjectArray *patterns) {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicHandlersHandler, initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_, handler, patterns)
}

void ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withBoolean_withComMdimensionJchronicHandlersHandlerPatternArray_(ComMdimensionJchronicHandlersHandler *self, id<ComMdimensionJchronicHandlersIHandler> handler, jboolean compatible, IOSObjectArray *patterns) {
  NSObject_init(self);
  JreStrongAssign(&self->_handler_, handler);
  self->_compatible_ = compatible;
  JreStrongAssign(&self->_patterns_, patterns);
}

ComMdimensionJchronicHandlersHandler *new_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withBoolean_withComMdimensionJchronicHandlersHandlerPatternArray_(id<ComMdimensionJchronicHandlersIHandler> handler, jboolean compatible, IOSObjectArray *patterns) {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicHandlersHandler, initWithComMdimensionJchronicHandlersIHandler_withBoolean_withComMdimensionJchronicHandlersHandlerPatternArray_, handler, compatible, patterns)
}

ComMdimensionJchronicHandlersHandler *create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withBoolean_withComMdimensionJchronicHandlersHandlerPatternArray_(id<ComMdimensionJchronicHandlersIHandler> handler, jboolean compatible, IOSObjectArray *patterns) {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicHandlersHandler, initWithComMdimensionJchronicHandlersIHandler_withBoolean_withComMdimensionJchronicHandlersHandlerPatternArray_, handler, compatible, patterns)
}

id<JavaUtilMap> ComMdimensionJchronicHandlersHandler_definitions() {
  ComMdimensionJchronicHandlersHandler_initialize();
  @synchronized(ComMdimensionJchronicHandlersHandler_class_()) {
    if (ComMdimensionJchronicHandlersHandler__definitions == nil) {
      id<JavaUtilMap> definitions = create_JavaUtilHashMap_init();
      id<JavaUtilList> timeHandlers = create_JavaUtilLinkedList_init();
      [timeHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(nil, [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeaterTime_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicRepeatersRepeaterDayPortion_class_(), true) } count:2 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [definitions putWithId:JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME) withId:timeHandlers];
      id<JavaUtilList> dateHandlers = create_JavaUtilLinkedList_init();
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersRdnRmnSdTTzSyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeaterDayName_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeaterMonthName_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarDay_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeaterTime_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsTimeZone_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarYear_class_()) } count:6 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersRmnSdSyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeaterMonthName_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarDay_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsSeparatorComma_class_(), true), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarYear_class_()) } count:4 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersRmnSdSyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeaterMonthName_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarDay_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarYear_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsSeparatorAt_class_(), true), create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME), true) } count:5 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersRmnSdHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeaterMonthName_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarDay_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsSeparatorAt_class_(), true), create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME), true) } count:4 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersRmnOdHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeaterMonthName_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsOrdinalDay_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsSeparatorAt_class_(), true), create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME), true) } count:4 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersRmnSyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeaterMonthName_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarYear_class_()) } count:2 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersSdRmnSyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarDay_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeaterMonthName_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarYear_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsSeparatorAt_class_(), true), create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME), true) } count:5 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersSmSdSyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarMonth_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsSeparatorSlashOrDash_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarDay_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsSeparatorSlashOrDash_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarYear_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsSeparatorAt_class_(), true), create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME), true) } count:7 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersSdSmSyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarDay_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsSeparatorSlashOrDash_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarMonth_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsSeparatorSlashOrDash_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarYear_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsSeparatorAt_class_(), true), create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME), true) } count:7 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersSySmSdHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarYear_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsSeparatorSlashOrDash_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarMonth_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsSeparatorSlashOrDash_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarDay_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsSeparatorAt_class_(), true), create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME), true) } count:7 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withBoolean_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersSmSdHandler_init(), false, [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarMonth_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsSeparatorSlashOrDash_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarDay_class_()) } count:3 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [dateHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersSmSyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarMonth_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsSeparatorSlashOrDash_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarYear_class_()) } count:3 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [definitions putWithId:JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, DATE) withId:dateHandlers];
      id<JavaUtilList> anchorHandlers = create_JavaUtilLinkedList_init();
      [anchorHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersRHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsGrabber_class_(), true), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsSeparatorAt_class_(), true), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicRepeatersRepeater_class_(), true), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicRepeatersRepeater_class_(), true) } count:5 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [anchorHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersRHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsGrabber_class_(), true), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicTagsSeparatorAt_class_(), true), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicRepeatersRepeater_class_(), true), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicRepeatersRepeater_class_(), true) } count:6 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [anchorHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersRGRHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsGrabber_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()) } count:3 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [definitions putWithId:JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, ANCHOR) withId:anchorHandlers];
      id<JavaUtilList> arrowHandlers = create_JavaUtilLinkedList_init();
      [arrowHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersSRPHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalar_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsPointer_class_()) } count:3 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [arrowHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersPSRHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsPointer_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalar_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()) } count:3 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [arrowHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersSRPAHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalar_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsPointer_class_()), create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_(JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, ANCHOR)) } count:4 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [definitions putWithId:JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, ARROW) withId:arrowHandlers];
      id<JavaUtilList> narrowHandlers = create_JavaUtilLinkedList_init();
      [narrowHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersORSRHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsOrdinal_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsSeparatorIn_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()) } count:4 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [narrowHandlers addWithId:create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersORGRHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsOrdinal_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsGrabber_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()) } count:4 type:ComMdimensionJchronicHandlersHandlerPattern_class_()])];
      [definitions putWithId:JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, NARROW) withId:narrowHandlers];
      JreStrongAssign(&ComMdimensionJchronicHandlersHandler__definitions, definitions);
    }
    return JreRetainedLocalValue(ComMdimensionJchronicHandlersHandler__definitions);
  }
}

ComMdimensionJchronicUtilsSpan *ComMdimensionJchronicHandlersHandler_tokensToSpanWithJavaUtilList_withComMdimensionJchronicOptions_(id<JavaUtilList> tokens, ComMdimensionJchronicOptions *options) {
  ComMdimensionJchronicHandlersHandler_initialize();
  if ([((ComMdimensionJchronicOptions *) nil_chk(options)) isDebug]) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Chronic.tokensToSpan: ", tokens)];
  }
  id<JavaUtilMap> definitions = ComMdimensionJchronicHandlersHandler_definitions();
  for (ComMdimensionJchronicHandlersHandler * __strong handler in nil_chk([((id<JavaUtilMap>) nil_chk(definitions)) getWithId:JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, DATE)])) {
    if ([((ComMdimensionJchronicHandlersHandler *) nil_chk(handler)) isCompatibleWithComMdimensionJchronicOptions:options] && [handler matchWithJavaUtilList:tokens withJavaUtilMap:definitions]) {
      if ([options isDebug]) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Chronic.tokensToSpan: date"];
      }
      id<JavaUtilList> goodTokens = create_JavaUtilLinkedList_init();
      for (ComMdimensionJchronicUtilsToken * __strong token in nil_chk(tokens)) {
        if ([((ComMdimensionJchronicUtilsToken *) nil_chk(token)) getTagWithIOSClass:ComMdimensionJchronicTagsSeparator_class_()] == nil) {
          [goodTokens addWithId:token];
        }
      }
      return [((id<ComMdimensionJchronicHandlersIHandler>) nil_chk([handler getHandler])) handleWithJavaUtilList:goodTokens withComMdimensionJchronicOptions:options];
    }
  }
  for (ComMdimensionJchronicHandlersHandler * __strong handler in nil_chk([definitions getWithId:JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, ANCHOR)])) {
    if ([((ComMdimensionJchronicHandlersHandler *) nil_chk(handler)) isCompatibleWithComMdimensionJchronicOptions:options] && [handler matchWithJavaUtilList:tokens withJavaUtilMap:definitions]) {
      if ([options isDebug]) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Chronic.tokensToSpan: anchor"];
      }
      id<JavaUtilList> goodTokens = create_JavaUtilLinkedList_init();
      for (ComMdimensionJchronicUtilsToken * __strong token in nil_chk(tokens)) {
        if ([((ComMdimensionJchronicUtilsToken *) nil_chk(token)) getTagWithIOSClass:ComMdimensionJchronicTagsSeparator_class_()] == nil) {
          [goodTokens addWithId:token];
        }
      }
      return [((id<ComMdimensionJchronicHandlersIHandler>) nil_chk([handler getHandler])) handleWithJavaUtilList:goodTokens withComMdimensionJchronicOptions:options];
    }
  }
  for (ComMdimensionJchronicHandlersHandler * __strong handler in nil_chk([definitions getWithId:JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, ARROW)])) {
    if ([((ComMdimensionJchronicHandlersHandler *) nil_chk(handler)) isCompatibleWithComMdimensionJchronicOptions:options] && [handler matchWithJavaUtilList:tokens withJavaUtilMap:definitions]) {
      if ([options isDebug]) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Chronic.tokensToSpan: arrow"];
      }
      id<JavaUtilList> goodTokens = create_JavaUtilLinkedList_init();
      for (ComMdimensionJchronicUtilsToken * __strong token in nil_chk(tokens)) {
        if ([((ComMdimensionJchronicUtilsToken *) nil_chk(token)) getTagWithIOSClass:ComMdimensionJchronicTagsSeparatorAt_class_()] == nil && [token getTagWithIOSClass:ComMdimensionJchronicTagsSeparatorSlashOrDash_class_()] == nil && [token getTagWithIOSClass:ComMdimensionJchronicTagsSeparatorComma_class_()] == nil) {
          [goodTokens addWithId:token];
        }
      }
      return [((id<ComMdimensionJchronicHandlersIHandler>) nil_chk([handler getHandler])) handleWithJavaUtilList:goodTokens withComMdimensionJchronicOptions:options];
    }
  }
  for (ComMdimensionJchronicHandlersHandler * __strong handler in nil_chk([definitions getWithId:JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, NARROW)])) {
    if ([((ComMdimensionJchronicHandlersHandler *) nil_chk(handler)) isCompatibleWithComMdimensionJchronicOptions:options] && [handler matchWithJavaUtilList:tokens withJavaUtilMap:definitions]) {
      if ([options isDebug]) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Chronic.tokensToSpan: narrow"];
      }
      return [((id<ComMdimensionJchronicHandlersIHandler>) nil_chk([handler getHandler])) handleWithJavaUtilList:tokens withComMdimensionJchronicOptions:options];
    }
  }
  if ([options isDebug]) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Chronic.tokensToSpan: none"];
  }
  return nil;
}

id<JavaUtilList> ComMdimensionJchronicHandlersHandler_getRepeatersWithJavaUtilList_(id<JavaUtilList> tokens) {
  ComMdimensionJchronicHandlersHandler_initialize();
  id<JavaUtilList> repeaters = create_JavaUtilLinkedList_init();
  for (ComMdimensionJchronicUtilsToken * __strong token in nil_chk(tokens)) {
    ComMdimensionJchronicRepeatersRepeater *tag = ((ComMdimensionJchronicRepeatersRepeater *) [((ComMdimensionJchronicUtilsToken *) nil_chk(token)) getTagWithIOSClass:ComMdimensionJchronicRepeatersRepeater_class_()]);
    if (tag != nil) {
      [repeaters addWithId:tag];
    }
  }
  JavaUtilCollections_sortWithJavaUtilList_(repeaters);
  JavaUtilCollections_reverseWithJavaUtilList_(repeaters);
  return repeaters;
}

ComMdimensionJchronicUtilsSpan *ComMdimensionJchronicHandlersHandler_getAnchorWithJavaUtilList_withComMdimensionJchronicOptions_(id<JavaUtilList> tokens, ComMdimensionJchronicOptions *options) {
  ComMdimensionJchronicHandlersHandler_initialize();
  ComMdimensionJchronicTagsGrabber *grabber = create_ComMdimensionJchronicTagsGrabber_initWithComMdimensionJchronicTagsGrabber_Relative_(JreLoadEnum(ComMdimensionJchronicTagsGrabber_Relative, THIS));
  ComMdimensionJchronicTagsPointer_PointerType *pointer = JreLoadEnum(ComMdimensionJchronicTagsPointer_PointerType, FUTURE);
  id<JavaUtilList> repeaters = ComMdimensionJchronicHandlersHandler_getRepeatersWithJavaUtilList_(tokens);
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(repeaters)) size]; i++) {
    [((id<JavaUtilList>) nil_chk(tokens)) removeWithInt:[tokens size] - 1];
  }
  if (![((id<JavaUtilList>) nil_chk(tokens)) isEmpty] && [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:0])) getTagWithIOSClass:ComMdimensionJchronicTagsGrabber_class_()] != nil) {
    grabber = ((ComMdimensionJchronicTagsGrabber *) [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:0])) getTagWithIOSClass:ComMdimensionJchronicTagsGrabber_class_()]);
    [tokens removeWithInt:[tokens size] - 1];
  }
  ComMdimensionJchronicRepeatersRepeater *head = [repeaters removeWithInt:0];
  [((ComMdimensionJchronicRepeatersRepeater *) nil_chk(head)) setStartWithJavaUtilCalendar:(JavaUtilCalendar *) cast_chk([((JavaUtilCalendar *) nil_chk([((ComMdimensionJchronicOptions *) nil_chk(options)) getNow])) java_clone], [JavaUtilCalendar class])];
  ComMdimensionJchronicUtilsSpan *outerSpan;
  ComMdimensionJchronicTagsGrabber_Relative *grabberType = [((ComMdimensionJchronicTagsGrabber *) nil_chk(grabber)) getType];
  if (grabberType == JreLoadEnum(ComMdimensionJchronicTagsGrabber_Relative, LAST)) {
    outerSpan = [head nextSpanWithComMdimensionJchronicTagsPointer_PointerType:JreLoadEnum(ComMdimensionJchronicTagsPointer_PointerType, PAST)];
  }
  else if (grabberType == JreLoadEnum(ComMdimensionJchronicTagsGrabber_Relative, THIS)) {
    if ([repeaters size] > 0) {
      outerSpan = [head thisSpanWithComMdimensionJchronicTagsPointer_PointerType:JreLoadEnum(ComMdimensionJchronicTagsPointer_PointerType, NONE)];
    }
    else {
      outerSpan = [head thisSpanWithComMdimensionJchronicTagsPointer_PointerType:[options getContext]];
    }
  }
  else if (grabberType == JreLoadEnum(ComMdimensionJchronicTagsGrabber_Relative, NEXT)) {
    outerSpan = [head nextSpanWithComMdimensionJchronicTagsPointer_PointerType:JreLoadEnum(ComMdimensionJchronicTagsPointer_PointerType, FUTURE)];
  }
  else {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@C", @"Invalid grabber type ", grabberType, '.'));
  }
  if ([options isDebug]) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@$@", @"Chronic.getAnchor: outerSpan = ", outerSpan, @"; repeaters = ", repeaters)];
  }
  ComMdimensionJchronicUtilsSpan *anchor = ComMdimensionJchronicHandlersHandler_findWithinWithJavaUtilList_withComMdimensionJchronicUtilsSpan_withComMdimensionJchronicTagsPointer_PointerType_withComMdimensionJchronicOptions_(repeaters, outerSpan, pointer, options);
  return anchor;
}

ComMdimensionJchronicUtilsSpan *ComMdimensionJchronicHandlersHandler_dayOrTimeWithJavaUtilCalendar_withJavaUtilList_withComMdimensionJchronicOptions_(JavaUtilCalendar *dayStart, id<JavaUtilList> timeTokens, ComMdimensionJchronicOptions *options) {
  ComMdimensionJchronicHandlersHandler_initialize();
  ComMdimensionJchronicUtilsSpan *outerSpan = create_ComMdimensionJchronicUtilsSpan_initWithJavaUtilCalendar_withJavaUtilCalendar_(dayStart, ComMdimensionJchronicUtilsTime_cloneAndAddWithJavaUtilCalendar_withInt_withLong_(dayStart, JavaUtilCalendar_DAY_OF_MONTH, 1));
  if (![((id<JavaUtilList>) nil_chk(timeTokens)) isEmpty]) {
    [((ComMdimensionJchronicOptions *) nil_chk(options)) setNowWithJavaUtilCalendar:[outerSpan getBeginCalendar]];
    ComMdimensionJchronicUtilsSpan *time = ComMdimensionJchronicHandlersHandler_getAnchorWithJavaUtilList_withComMdimensionJchronicOptions_(ComMdimensionJchronicHandlersHandler_dealiasAndDisambiguateTimesWithJavaUtilList_withComMdimensionJchronicOptions_(timeTokens, options), options);
    return time;
  }
  return outerSpan;
}

ComMdimensionJchronicUtilsSpan *ComMdimensionJchronicHandlersHandler_findWithinWithJavaUtilList_withComMdimensionJchronicUtilsSpan_withComMdimensionJchronicTagsPointer_PointerType_withComMdimensionJchronicOptions_(id<JavaUtilList> tags, ComMdimensionJchronicUtilsSpan *span, ComMdimensionJchronicTagsPointer_PointerType *pointer, ComMdimensionJchronicOptions *options) {
  ComMdimensionJchronicHandlersHandler_initialize();
  if ([((ComMdimensionJchronicOptions *) nil_chk(options)) isDebug]) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@$@", @"Chronic.findWithin: ", tags, @" in ", span)];
  }
  if ([((id<JavaUtilList>) nil_chk(tags)) isEmpty]) {
    return span;
  }
  ComMdimensionJchronicRepeatersRepeater *head = [tags getWithInt:0];
  id<JavaUtilList> rest = ([tags size] > 1) ? [tags subListWithInt:1 withInt:[tags size]] : create_JavaUtilLinkedList_init();
  [((ComMdimensionJchronicRepeatersRepeater *) nil_chk(head)) setStartWithJavaUtilCalendar:(pointer == JreLoadEnum(ComMdimensionJchronicTagsPointer_PointerType, FUTURE)) ? [((ComMdimensionJchronicUtilsSpan *) nil_chk(span)) getBeginCalendar] : [((ComMdimensionJchronicUtilsSpan *) nil_chk(span)) getEndCalendar]];
  ComMdimensionJchronicUtilsSpan *h = [head thisSpanWithComMdimensionJchronicTagsPointer_PointerType:JreLoadEnum(ComMdimensionJchronicTagsPointer_PointerType, NONE)];
  if ([span containsWithLong:[((ComMdimensionJchronicUtilsSpan *) nil_chk(h)) getBegin]] || [span containsWithLong:[h getEnd]]) {
    return ComMdimensionJchronicHandlersHandler_findWithinWithJavaUtilList_withComMdimensionJchronicUtilsSpan_withComMdimensionJchronicTagsPointer_PointerType_withComMdimensionJchronicOptions_(rest, h, pointer, options);
  }
  return nil;
}

id<JavaUtilList> ComMdimensionJchronicHandlersHandler_dealiasAndDisambiguateTimesWithJavaUtilList_withComMdimensionJchronicOptions_(id<JavaUtilList> tokens, ComMdimensionJchronicOptions *options) {
  ComMdimensionJchronicHandlersHandler_initialize();
  jint dayPortionIndex = -1;
  jint tokenSize = [((id<JavaUtilList>) nil_chk(tokens)) size];
  for (jint i = 0; dayPortionIndex == -1 && i < tokenSize; i++) {
    ComMdimensionJchronicUtilsToken *t = [tokens getWithInt:i];
    if ([((ComMdimensionJchronicUtilsToken *) nil_chk(t)) getTagWithIOSClass:ComMdimensionJchronicRepeatersRepeaterDayPortion_class_()] != nil) {
      dayPortionIndex = i;
    }
  }
  jint timeIndex = -1;
  for (jint i = 0; timeIndex == -1 && i < tokenSize; i++) {
    ComMdimensionJchronicUtilsToken *t = [tokens getWithInt:i];
    if ([((ComMdimensionJchronicUtilsToken *) nil_chk(t)) getTagWithIOSClass:ComMdimensionJchronicRepeatersRepeaterTime_class_()] != nil) {
      timeIndex = i;
    }
  }
  if (dayPortionIndex != -1 && timeIndex != -1) {
    ComMdimensionJchronicUtilsToken *t1 = [tokens getWithInt:dayPortionIndex];
    ComMdimensionJchronicTagsTag *t1Tag = [((ComMdimensionJchronicUtilsToken *) nil_chk(t1)) getTagWithIOSClass:ComMdimensionJchronicRepeatersRepeaterDayPortion_class_()];
    id t1TagType = [((ComMdimensionJchronicTagsTag *) nil_chk(t1Tag)) getType];
    if ([((ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion *) nil_chk(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion, MORNING))) isEqual:t1TagType]) {
      if ([((ComMdimensionJchronicOptions *) nil_chk(options)) isDebug]) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Chronic.dealiasAndDisambiguateTimes: morning->am"];
      }
      [t1 untagWithIOSClass:ComMdimensionJchronicRepeatersRepeaterDayPortion_class_()];
      [t1 tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersEnumRepeaterDayPortion_initWithComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion, AM))];
    }
    else if ([((ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion *) nil_chk(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion, AFTERNOON))) isEqual:t1TagType] || [((ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion *) nil_chk(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion, EVENING))) isEqual:t1TagType] || [((ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion *) nil_chk(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion, NIGHT))) isEqual:t1TagType]) {
      if ([((ComMdimensionJchronicOptions *) nil_chk(options)) isDebug]) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@$", @"Chronic.dealiasAndDisambiguateTimes: ", t1TagType, @"->pm")];
      }
      [t1 untagWithIOSClass:ComMdimensionJchronicRepeatersRepeaterDayPortion_class_()];
      [t1 tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersEnumRepeaterDayPortion_initWithComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion, PM))];
    }
  }
  if ([((ComMdimensionJchronicOptions *) nil_chk(options)) getAmbiguousTimeRange] != 0) {
    id<JavaUtilList> ttokens = create_JavaUtilLinkedList_init();
    for (jint i = 0; i < tokenSize; i++) {
      ComMdimensionJchronicUtilsToken *t0 = [tokens getWithInt:i];
      [ttokens addWithId:t0];
      ComMdimensionJchronicUtilsToken *t1 = nil;
      if (i < tokenSize - 1) {
        t1 = [tokens getWithInt:i + 1];
      }
      if ([((ComMdimensionJchronicUtilsToken *) nil_chk(t0)) getTagWithIOSClass:ComMdimensionJchronicRepeatersRepeaterTime_class_()] != nil && [((ComMdimensionJchronicUtilsTick *) nil_chk([((ComMdimensionJchronicRepeatersRepeaterTime *) nil_chk([t0 getTagWithIOSClass:ComMdimensionJchronicRepeatersRepeaterTime_class_()])) getType])) isAmbiguous] && (t1 == nil || [t1 getTagWithIOSClass:ComMdimensionJchronicRepeatersRepeaterDayPortion_class_()] == nil)) {
        ComMdimensionJchronicUtilsToken *distoken = create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"disambiguator");
        [distoken tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersIntegerRepeaterDayPortion_initWithJavaLangInteger_(JavaLangInteger_valueOfWithInt_([options getAmbiguousTimeRange]))];
        [ttokens addWithId:distoken];
      }
    }
    tokens = ttokens;
  }
  if ([options isDebug]) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"Chronic.dealiasAndDisambiguateTimes: ", tokens)];
  }
  return tokens;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicHandlersHandler)

J2OBJC_INITIALIZED_DEFN(ComMdimensionJchronicHandlersHandler_HandlerType)

ComMdimensionJchronicHandlersHandler_HandlerType *ComMdimensionJchronicHandlersHandler_HandlerType_values_[5];

@implementation ComMdimensionJchronicHandlersHandler_HandlerType

+ (IOSObjectArray *)values {
  return ComMdimensionJchronicHandlersHandler_HandlerType_values();
}

+ (ComMdimensionJchronicHandlersHandler_HandlerType *)valueOfWithNSString:(NSString *)name {
  return ComMdimensionJchronicHandlersHandler_HandlerType_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComMdimensionJchronicHandlersHandler_HandlerType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComMdimensionJchronicHandlersHandler_HandlerType;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TIME", "LComMdimensionJchronicHandlersHandler_HandlerType;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "DATE", "LComMdimensionJchronicHandlersHandler_HandlerType;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "ANCHOR", "LComMdimensionJchronicHandlersHandler_HandlerType;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "ARROW", "LComMdimensionJchronicHandlersHandler_HandlerType;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "NARROW", "LComMdimensionJchronicHandlersHandler_HandlerType;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME), &JreEnum(ComMdimensionJchronicHandlersHandler_HandlerType, DATE), &JreEnum(ComMdimensionJchronicHandlersHandler_HandlerType, ANCHOR), &JreEnum(ComMdimensionJchronicHandlersHandler_HandlerType, ARROW), &JreEnum(ComMdimensionJchronicHandlersHandler_HandlerType, NARROW), "LComMdimensionJchronicHandlersHandler;", "Ljava/lang/Enum<Lcom/mdimension/jchronic/handlers/Handler$HandlerType;>;" };
  static const J2ObjcClassInfo _ComMdimensionJchronicHandlersHandler_HandlerType = { "HandlerType", "com.mdimension.jchronic.handlers", ptrTable, methods, fields, 7, 0x4019, 2, 5, 7, -1, -1, 8, -1 };
  return &_ComMdimensionJchronicHandlersHandler_HandlerType;
}

+ (void)initialize {
  if (self == [ComMdimensionJchronicHandlersHandler_HandlerType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 5 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 5; i++) {
      ((void)(ComMdimensionJchronicHandlersHandler_HandlerType_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ComMdimensionJchronicHandlersHandler_HandlerType_initWithNSString_withInt_(e, JreEnumConstantName(ComMdimensionJchronicHandlersHandler_HandlerType_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ComMdimensionJchronicHandlersHandler_HandlerType)
  }
}

@end

void ComMdimensionJchronicHandlersHandler_HandlerType_initWithNSString_withInt_(ComMdimensionJchronicHandlersHandler_HandlerType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComMdimensionJchronicHandlersHandler_HandlerType_values() {
  ComMdimensionJchronicHandlersHandler_HandlerType_initialize();
  return [IOSObjectArray arrayWithObjects:ComMdimensionJchronicHandlersHandler_HandlerType_values_ count:5 type:ComMdimensionJchronicHandlersHandler_HandlerType_class_()];
}

ComMdimensionJchronicHandlersHandler_HandlerType *ComMdimensionJchronicHandlersHandler_HandlerType_valueOfWithNSString_(NSString *name) {
  ComMdimensionJchronicHandlersHandler_HandlerType_initialize();
  for (int i = 0; i < 5; i++) {
    ComMdimensionJchronicHandlersHandler_HandlerType *e = ComMdimensionJchronicHandlersHandler_HandlerType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComMdimensionJchronicHandlersHandler_HandlerType *ComMdimensionJchronicHandlersHandler_HandlerType_fromOrdinal(NSUInteger ordinal) {
  ComMdimensionJchronicHandlersHandler_HandlerType_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return ComMdimensionJchronicHandlersHandler_HandlerType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicHandlersHandler_HandlerType)

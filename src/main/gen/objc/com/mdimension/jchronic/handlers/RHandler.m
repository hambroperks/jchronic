//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jchronic/src/main/java/com/mdimension/jchronic/handlers/RHandler.java
//

#include "J2ObjC_source.h"
#include "com/mdimension/jchronic/Options.h"
#include "com/mdimension/jchronic/handlers/Handler.h"
#include "com/mdimension/jchronic/handlers/RHandler.h"
#include "com/mdimension/jchronic/utils/Span.h"
#include "java/util/List.h"

@implementation ComMdimensionJchronicHandlersRHandler

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComMdimensionJchronicHandlersRHandler_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComMdimensionJchronicUtilsSpan *)handleWithJavaUtilList:(id<JavaUtilList>)tokens
                          withComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options {
  id<JavaUtilList> ddTokens = ComMdimensionJchronicHandlersHandler_dealiasAndDisambiguateTimesWithJavaUtilList_withComMdimensionJchronicOptions_(tokens, options);
  return ComMdimensionJchronicHandlersHandler_getAnchorWithJavaUtilList_withComMdimensionJchronicOptions_(ddTokens, options);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComMdimensionJchronicUtilsSpan;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(handleWithJavaUtilList:withComMdimensionJchronicOptions:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "handle", "LJavaUtilList;LComMdimensionJchronicOptions;", "(Ljava/util/List<Lcom/mdimension/jchronic/utils/Token;>;Lcom/mdimension/jchronic/Options;)Lcom/mdimension/jchronic/utils/Span;" };
  static const J2ObjcClassInfo _ComMdimensionJchronicHandlersRHandler = { "RHandler", "com.mdimension.jchronic.handlers", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_ComMdimensionJchronicHandlersRHandler;
}

@end

void ComMdimensionJchronicHandlersRHandler_init(ComMdimensionJchronicHandlersRHandler *self) {
  NSObject_init(self);
}

ComMdimensionJchronicHandlersRHandler *new_ComMdimensionJchronicHandlersRHandler_init() {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicHandlersRHandler, init)
}

ComMdimensionJchronicHandlersRHandler *create_ComMdimensionJchronicHandlersRHandler_init() {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicHandlersRHandler, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicHandlersRHandler)

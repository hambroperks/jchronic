//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jchronic/src/main/java/com/mdimension/jchronic/handlers/TagPattern.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/mdimension/jchronic/handlers/HandlerPattern.h"
#include "com/mdimension/jchronic/handlers/TagPattern.h"

@interface ComMdimensionJchronicHandlersTagPattern () {
 @public
  IOSClass *_tagClass_;
}

@end

J2OBJC_FIELD_SETTER(ComMdimensionJchronicHandlersTagPattern, _tagClass_, IOSClass *)

@implementation ComMdimensionJchronicHandlersTagPattern

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)tagClass {
  ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(self, tagClass);
  return self;
}

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)tagClass
                               withBoolean:(jboolean)optional {
  ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(self, tagClass, optional);
  return self;
}

- (IOSClass *)getTagClass {
  return _tagClass_;
}

- (NSString *)description {
  return JreStrcat("$@C", @"[TagPattern: tagClass = ", _tagClass_, ']');
}

- (void)dealloc {
  RELEASE_(_tagClass_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(initWithIOSClass:withBoolean:);
  methods[2].selector = @selector(getTagClass);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_tagClass_", "LIOSClass;", .constantValue.asLong = 0, 0x2, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<+Lcom/mdimension/jchronic/tags/Tag;>;)V", "LIOSClass;Z", "(Ljava/lang/Class<+Lcom/mdimension/jchronic/tags/Tag;>;Z)V", "()Ljava/lang/Class<+Lcom/mdimension/jchronic/tags/Tag;>;", "toString", "Ljava/lang/Class<+Lcom/mdimension/jchronic/tags/Tag;>;" };
  static const J2ObjcClassInfo _ComMdimensionJchronicHandlersTagPattern = { "TagPattern", "com.mdimension.jchronic.handlers", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_ComMdimensionJchronicHandlersTagPattern;
}

@end

void ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicHandlersTagPattern *self, IOSClass *tagClass) {
  ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(self, tagClass, false);
}

ComMdimensionJchronicHandlersTagPattern *new_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(IOSClass *tagClass) {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicHandlersTagPattern, initWithIOSClass_, tagClass)
}

ComMdimensionJchronicHandlersTagPattern *create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(IOSClass *tagClass) {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicHandlersTagPattern, initWithIOSClass_, tagClass)
}

void ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicHandlersTagPattern *self, IOSClass *tagClass, jboolean optional) {
  ComMdimensionJchronicHandlersHandlerPattern_initWithBoolean_(self, optional);
  JreStrongAssign(&self->_tagClass_, tagClass);
}

ComMdimensionJchronicHandlersTagPattern *new_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(IOSClass *tagClass, jboolean optional) {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicHandlersTagPattern, initWithIOSClass_withBoolean_, tagClass, optional)
}

ComMdimensionJchronicHandlersTagPattern *create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(IOSClass *tagClass, jboolean optional) {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicHandlersTagPattern, initWithIOSClass_withBoolean_, tagClass, optional)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicHandlersTagPattern)

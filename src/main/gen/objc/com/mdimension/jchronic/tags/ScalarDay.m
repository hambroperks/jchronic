//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jchronic/src/main/java/com/mdimension/jchronic/tags/ScalarDay.java
//

#include "J2ObjC_source.h"
#include "com/mdimension/jchronic/Options.h"
#include "com/mdimension/jchronic/tags/Scalar.h"
#include "com/mdimension/jchronic/tags/ScalarDay.h"
#include "com/mdimension/jchronic/utils/Token.h"
#include "java/lang/Integer.h"
#include "java/util/Set.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

inline JavaUtilRegexPattern *ComMdimensionJchronicTagsScalarDay_get_DAY_PATTERN(void);
static JavaUtilRegexPattern *ComMdimensionJchronicTagsScalarDay_DAY_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComMdimensionJchronicTagsScalarDay, DAY_PATTERN, JavaUtilRegexPattern *)

J2OBJC_INITIALIZED_DEFN(ComMdimensionJchronicTagsScalarDay)

@implementation ComMdimensionJchronicTagsScalarDay

- (instancetype __nonnull)initWithJavaLangInteger:(JavaLangInteger *)type {
  ComMdimensionJchronicTagsScalarDay_initWithJavaLangInteger_(self, type);
  return self;
}

- (NSString *)description {
  return JreStrcat("$$@", [super description], @"-day-", [self getType]);
}

+ (ComMdimensionJchronicTagsScalarDay *)scanWithComMdimensionJchronicUtilsToken:(ComMdimensionJchronicUtilsToken *)token
                                            withComMdimensionJchronicUtilsToken:(ComMdimensionJchronicUtilsToken *)postToken
                                               withComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options {
  return ComMdimensionJchronicTagsScalarDay_scanWithComMdimensionJchronicUtilsToken_withComMdimensionJchronicUtilsToken_withComMdimensionJchronicOptions_(token, postToken, options);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LComMdimensionJchronicTagsScalarDay;", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangInteger:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(scanWithComMdimensionJchronicUtilsToken:withComMdimensionJchronicUtilsToken:withComMdimensionJchronicOptions:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DAY_PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangInteger;", "toString", "scan", "LComMdimensionJchronicUtilsToken;LComMdimensionJchronicUtilsToken;LComMdimensionJchronicOptions;", &ComMdimensionJchronicTagsScalarDay_DAY_PATTERN };
  static const J2ObjcClassInfo _ComMdimensionJchronicTagsScalarDay = { "ScalarDay", "com.mdimension.jchronic.tags", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_ComMdimensionJchronicTagsScalarDay;
}

+ (void)initialize {
  if (self == [ComMdimensionJchronicTagsScalarDay class]) {
    JreStrongAssign(&ComMdimensionJchronicTagsScalarDay_DAY_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"^\\d\\d?$"));
    J2OBJC_SET_INITIALIZED(ComMdimensionJchronicTagsScalarDay)
  }
}

@end

void ComMdimensionJchronicTagsScalarDay_initWithJavaLangInteger_(ComMdimensionJchronicTagsScalarDay *self, JavaLangInteger *type) {
  ComMdimensionJchronicTagsScalar_initWithJavaLangInteger_(self, type);
}

ComMdimensionJchronicTagsScalarDay *new_ComMdimensionJchronicTagsScalarDay_initWithJavaLangInteger_(JavaLangInteger *type) {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicTagsScalarDay, initWithJavaLangInteger_, type)
}

ComMdimensionJchronicTagsScalarDay *create_ComMdimensionJchronicTagsScalarDay_initWithJavaLangInteger_(JavaLangInteger *type) {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicTagsScalarDay, initWithJavaLangInteger_, type)
}

ComMdimensionJchronicTagsScalarDay *ComMdimensionJchronicTagsScalarDay_scanWithComMdimensionJchronicUtilsToken_withComMdimensionJchronicUtilsToken_withComMdimensionJchronicOptions_(ComMdimensionJchronicUtilsToken *token, ComMdimensionJchronicUtilsToken *postToken, ComMdimensionJchronicOptions *options) {
  ComMdimensionJchronicTagsScalarDay_initialize();
  if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(ComMdimensionJchronicTagsScalarDay_DAY_PATTERN)) matcherWithJavaLangCharSequence:[((ComMdimensionJchronicUtilsToken *) nil_chk(token)) getWord]])) matches]) {
    jint scalarValue = JavaLangInteger_parseIntWithNSString_([token getWord]);
    if (!(scalarValue > 31 || (postToken != nil && [((id<JavaUtilSet>) nil_chk(JreLoadStatic(ComMdimensionJchronicTagsScalar, TIMES))) containsWithId:[postToken getWord]]))) {
      return create_ComMdimensionJchronicTagsScalarDay_initWithJavaLangInteger_(JavaLangInteger_valueOfWithInt_(scalarValue));
    }
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicTagsScalarDay)

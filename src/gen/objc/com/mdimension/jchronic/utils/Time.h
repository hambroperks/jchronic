//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jchronic/src/main/java/com/mdimension/jchronic/utils/Time.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComMdimensionJchronicUtilsTime")
#ifdef RESTRICT_ComMdimensionJchronicUtilsTime
#define INCLUDE_ALL_ComMdimensionJchronicUtilsTime 0
#else
#define INCLUDE_ALL_ComMdimensionJchronicUtilsTime 1
#endif
#undef RESTRICT_ComMdimensionJchronicUtilsTime

#if !defined (ComMdimensionJchronicUtilsTime_) && (INCLUDE_ALL_ComMdimensionJchronicUtilsTime || defined(INCLUDE_ComMdimensionJchronicUtilsTime))
#define ComMdimensionJchronicUtilsTime_

@class JavaUtilCalendar;

@interface ComMdimensionJchronicUtilsTime : NSObject

#pragma mark Public

- (instancetype)init;

+ (JavaUtilCalendar *)cloneAndAddWithJavaUtilCalendar:(JavaUtilCalendar *)basis
                                              withInt:(jint)field
                                             withLong:(jlong)amount;

+ (JavaUtilCalendar *)constructWithInt:(jint)year
                               withInt:(jint)month;

+ (JavaUtilCalendar *)constructWithInt:(jint)year
                               withInt:(jint)month
                               withInt:(jint)day;

+ (JavaUtilCalendar *)constructWithInt:(jint)year
                               withInt:(jint)month
                               withInt:(jint)day
                               withInt:(jint)hour;

+ (JavaUtilCalendar *)constructWithInt:(jint)year
                               withInt:(jint)month
                               withInt:(jint)day
                               withInt:(jint)hour
                               withInt:(jint)minute;

+ (JavaUtilCalendar *)constructWithInt:(jint)year
                               withInt:(jint)month
                               withInt:(jint)day
                               withInt:(jint)hour
                               withInt:(jint)minute
                               withInt:(jint)second;

+ (JavaUtilCalendar *)constructWithInt:(jint)year
                               withInt:(jint)month
                               withInt:(jint)day
                               withInt:(jint)hour
                               withInt:(jint)minute
                               withInt:(jint)second
                               withInt:(jint)millisecond;

+ (JavaUtilCalendar *)yWithJavaUtilCalendar:(JavaUtilCalendar *)basis;

+ (JavaUtilCalendar *)yWithJavaUtilCalendar:(JavaUtilCalendar *)basis
                                    withInt:(jint)month;

+ (JavaUtilCalendar *)yWithJavaUtilCalendar:(JavaUtilCalendar *)basis
                                    withInt:(jint)month
                                    withInt:(jint)day;

+ (JavaUtilCalendar *)yJan1WithJavaUtilCalendar:(JavaUtilCalendar *)basis;

+ (JavaUtilCalendar *)ymWithJavaUtilCalendar:(JavaUtilCalendar *)basis;

+ (JavaUtilCalendar *)ymdWithJavaUtilCalendar:(JavaUtilCalendar *)basis;

+ (JavaUtilCalendar *)ymdhWithJavaUtilCalendar:(JavaUtilCalendar *)basis;

+ (JavaUtilCalendar *)ymdhmWithJavaUtilCalendar:(JavaUtilCalendar *)basis;

@end

J2OBJC_EMPTY_STATIC_INIT(ComMdimensionJchronicUtilsTime)

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_constructWithInt_withInt_(jint year, jint month);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_constructWithInt_withInt_withInt_(jint year, jint month, jint day);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_constructWithInt_withInt_withInt_withInt_(jint year, jint month, jint day, jint hour);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_constructWithInt_withInt_withInt_withInt_withInt_(jint year, jint month, jint day, jint hour, jint minute);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_constructWithInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint month, jint day, jint hour, jint minute, jint second);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_constructWithInt_withInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint month, jint day, jint hour, jint minute, jint second, jint millisecond);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_yWithJavaUtilCalendar_(JavaUtilCalendar *basis);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_yJan1WithJavaUtilCalendar_(JavaUtilCalendar *basis);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_yWithJavaUtilCalendar_withInt_(JavaUtilCalendar *basis, jint month);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_yWithJavaUtilCalendar_withInt_withInt_(JavaUtilCalendar *basis, jint month, jint day);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_ymWithJavaUtilCalendar_(JavaUtilCalendar *basis);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_ymdWithJavaUtilCalendar_(JavaUtilCalendar *basis);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_ymdhWithJavaUtilCalendar_(JavaUtilCalendar *basis);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_ymdhmWithJavaUtilCalendar_(JavaUtilCalendar *basis);

FOUNDATION_EXPORT JavaUtilCalendar *ComMdimensionJchronicUtilsTime_cloneAndAddWithJavaUtilCalendar_withInt_withLong_(JavaUtilCalendar *basis, jint field, jlong amount);

FOUNDATION_EXPORT void ComMdimensionJchronicUtilsTime_init(ComMdimensionJchronicUtilsTime *self);

FOUNDATION_EXPORT ComMdimensionJchronicUtilsTime *new_ComMdimensionJchronicUtilsTime_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicUtilsTime *create_ComMdimensionJchronicUtilsTime_init();

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicUtilsTime)

#endif

#pragma pop_macro("INCLUDE_ALL_ComMdimensionJchronicUtilsTime")

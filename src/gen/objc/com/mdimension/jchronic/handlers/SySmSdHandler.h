//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jchronic/src/main/java/com/mdimension/jchronic/handlers/SySmSdHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComMdimensionJchronicHandlersSySmSdHandler")
#ifdef RESTRICT_ComMdimensionJchronicHandlersSySmSdHandler
#define INCLUDE_ALL_ComMdimensionJchronicHandlersSySmSdHandler 0
#else
#define INCLUDE_ALL_ComMdimensionJchronicHandlersSySmSdHandler 1
#endif
#undef RESTRICT_ComMdimensionJchronicHandlersSySmSdHandler

#if !defined (ComMdimensionJchronicHandlersSySmSdHandler_) && (INCLUDE_ALL_ComMdimensionJchronicHandlersSySmSdHandler || defined(INCLUDE_ComMdimensionJchronicHandlersSySmSdHandler))
#define ComMdimensionJchronicHandlersSySmSdHandler_

#define RESTRICT_ComMdimensionJchronicHandlersSmSdSyHandler 1
#define INCLUDE_ComMdimensionJchronicHandlersSmSdSyHandler 1
#include "com/mdimension/jchronic/handlers/SmSdSyHandler.h"

@class ComMdimensionJchronicOptions;
@class ComMdimensionJchronicUtilsSpan;
@protocol JavaUtilList;

@interface ComMdimensionJchronicHandlersSySmSdHandler : ComMdimensionJchronicHandlersSmSdSyHandler

#pragma mark Public

- (instancetype)init;

- (ComMdimensionJchronicUtilsSpan *)handleWithJavaUtilList:(id<JavaUtilList>)tokens
                          withComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options;

@end

J2OBJC_EMPTY_STATIC_INIT(ComMdimensionJchronicHandlersSySmSdHandler)

FOUNDATION_EXPORT void ComMdimensionJchronicHandlersSySmSdHandler_init(ComMdimensionJchronicHandlersSySmSdHandler *self);

FOUNDATION_EXPORT ComMdimensionJchronicHandlersSySmSdHandler *new_ComMdimensionJchronicHandlersSySmSdHandler_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicHandlersSySmSdHandler *create_ComMdimensionJchronicHandlersSySmSdHandler_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicHandlersSySmSdHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_ComMdimensionJchronicHandlersSySmSdHandler")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jchronic/src/main/java/com/mdimension/jchronic/handlers/HandlerPattern.java
//

#include "J2ObjC_source.h"
#include "com/mdimension/jchronic/handlers/HandlerPattern.h"

@interface ComMdimensionJchronicHandlersHandlerPattern () {
 @public
  jboolean _optional_;
}

@end

@implementation ComMdimensionJchronicHandlersHandlerPattern

- (instancetype __nonnull)initWithBoolean:(jboolean)optional {
  ComMdimensionJchronicHandlersHandlerPattern_initWithBoolean_(self, optional);
  return self;
}

- (jboolean)isOptional {
  return _optional_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:);
  methods[1].selector = @selector(isOptional);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_optional_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z" };
  static const J2ObjcClassInfo _ComMdimensionJchronicHandlersHandlerPattern = { "HandlerPattern", "com.mdimension.jchronic.handlers", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_ComMdimensionJchronicHandlersHandlerPattern;
}

@end

void ComMdimensionJchronicHandlersHandlerPattern_initWithBoolean_(ComMdimensionJchronicHandlersHandlerPattern *self, jboolean optional) {
  NSObject_init(self);
  self->_optional_ = optional;
}

ComMdimensionJchronicHandlersHandlerPattern *new_ComMdimensionJchronicHandlersHandlerPattern_initWithBoolean_(jboolean optional) {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicHandlersHandlerPattern, initWithBoolean_, optional)
}

ComMdimensionJchronicHandlersHandlerPattern *create_ComMdimensionJchronicHandlersHandlerPattern_initWithBoolean_(jboolean optional) {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicHandlersHandlerPattern, initWithBoolean_, optional)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicHandlersHandlerPattern)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jchronic/src/main/java/com/mdimension/jchronic/handlers/HandlerTypePattern.java
//

#include "J2ObjC_source.h"
#include "com/mdimension/jchronic/handlers/Handler.h"
#include "com/mdimension/jchronic/handlers/HandlerPattern.h"
#include "com/mdimension/jchronic/handlers/HandlerTypePattern.h"

@interface ComMdimensionJchronicHandlersHandlerTypePattern () {
 @public
  ComMdimensionJchronicHandlersHandler_HandlerType *_type_;
}

@end

J2OBJC_FIELD_SETTER(ComMdimensionJchronicHandlersHandlerTypePattern, _type_, ComMdimensionJchronicHandlersHandler_HandlerType *)

@implementation ComMdimensionJchronicHandlersHandlerTypePattern

- (instancetype)initWithComMdimensionJchronicHandlersHandler_HandlerType:(ComMdimensionJchronicHandlersHandler_HandlerType *)type {
  ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_(self, type);
  return self;
}

- (instancetype)initWithComMdimensionJchronicHandlersHandler_HandlerType:(ComMdimensionJchronicHandlersHandler_HandlerType *)type
                                                             withBoolean:(jboolean)optional {
  ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(self, type, optional);
  return self;
}

- (ComMdimensionJchronicHandlersHandler_HandlerType *)getType {
  return _type_;
}

- (void)dealloc {
  RELEASE_(_type_);
  [super dealloc];
}

@end

void ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_(ComMdimensionJchronicHandlersHandlerTypePattern *self, ComMdimensionJchronicHandlersHandler_HandlerType *type) {
  ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(self, type, false);
}

ComMdimensionJchronicHandlersHandlerTypePattern *new_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_(ComMdimensionJchronicHandlersHandler_HandlerType *type) {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicHandlersHandlerTypePattern, initWithComMdimensionJchronicHandlersHandler_HandlerType_, type)
}

ComMdimensionJchronicHandlersHandlerTypePattern *create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_(ComMdimensionJchronicHandlersHandler_HandlerType *type) {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicHandlersHandlerTypePattern, initWithComMdimensionJchronicHandlersHandler_HandlerType_, type)
}

void ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(ComMdimensionJchronicHandlersHandlerTypePattern *self, ComMdimensionJchronicHandlersHandler_HandlerType *type, jboolean optional) {
  ComMdimensionJchronicHandlersHandlerPattern_initWithBoolean_(self, optional);
  JreStrongAssign(&self->_type_, type);
}

ComMdimensionJchronicHandlersHandlerTypePattern *new_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(ComMdimensionJchronicHandlersHandler_HandlerType *type, jboolean optional) {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicHandlersHandlerTypePattern, initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_, type, optional)
}

ComMdimensionJchronicHandlersHandlerTypePattern *create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(ComMdimensionJchronicHandlersHandler_HandlerType *type, jboolean optional) {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicHandlersHandlerTypePattern, initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_, type, optional)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicHandlersHandlerTypePattern)

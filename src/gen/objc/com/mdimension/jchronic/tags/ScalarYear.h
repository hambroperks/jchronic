//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jchronic/src/main/java/com/mdimension/jchronic/tags/ScalarYear.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComMdimensionJchronicTagsScalarYear")
#ifdef RESTRICT_ComMdimensionJchronicTagsScalarYear
#define INCLUDE_ALL_ComMdimensionJchronicTagsScalarYear 0
#else
#define INCLUDE_ALL_ComMdimensionJchronicTagsScalarYear 1
#endif
#undef RESTRICT_ComMdimensionJchronicTagsScalarYear

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComMdimensionJchronicTagsScalarYear_) && (INCLUDE_ALL_ComMdimensionJchronicTagsScalarYear || defined(INCLUDE_ComMdimensionJchronicTagsScalarYear))
#define ComMdimensionJchronicTagsScalarYear_

#define RESTRICT_ComMdimensionJchronicTagsScalar 1
#define INCLUDE_ComMdimensionJchronicTagsScalar 1
#include "com/mdimension/jchronic/tags/Scalar.h"

@class ComMdimensionJchronicOptions;
@class ComMdimensionJchronicUtilsToken;
@class JavaLangInteger;
@class JavaUtilRegexPattern;

@interface ComMdimensionJchronicTagsScalarYear : ComMdimensionJchronicTagsScalar

#pragma mark Public

- (instancetype __nonnull)initWithJavaLangInteger:(JavaLangInteger *)type;

- (JavaLangInteger *)getType;

+ (ComMdimensionJchronicTagsScalarYear *)scanWithComMdimensionJchronicUtilsToken:(ComMdimensionJchronicUtilsToken *)token
                                             withComMdimensionJchronicUtilsToken:(ComMdimensionJchronicUtilsToken *)postToken
                                                withComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(ComMdimensionJchronicTagsScalarYear)

inline JavaUtilRegexPattern *ComMdimensionJchronicTagsScalarYear_get_YEAR_PATTERN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilRegexPattern *ComMdimensionJchronicTagsScalarYear_YEAR_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComMdimensionJchronicTagsScalarYear, YEAR_PATTERN, JavaUtilRegexPattern *)

FOUNDATION_EXPORT void ComMdimensionJchronicTagsScalarYear_initWithJavaLangInteger_(ComMdimensionJchronicTagsScalarYear *self, JavaLangInteger *type);

FOUNDATION_EXPORT ComMdimensionJchronicTagsScalarYear *new_ComMdimensionJchronicTagsScalarYear_initWithJavaLangInteger_(JavaLangInteger *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicTagsScalarYear *create_ComMdimensionJchronicTagsScalarYear_initWithJavaLangInteger_(JavaLangInteger *type);

FOUNDATION_EXPORT ComMdimensionJchronicTagsScalarYear *ComMdimensionJchronicTagsScalarYear_scanWithComMdimensionJchronicUtilsToken_withComMdimensionJchronicUtilsToken_withComMdimensionJchronicOptions_(ComMdimensionJchronicUtilsToken *token, ComMdimensionJchronicUtilsToken *postToken, ComMdimensionJchronicOptions *options);

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicTagsScalarYear)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComMdimensionJchronicTagsScalarYear")

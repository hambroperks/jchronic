//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jchronic/src/main/java/com/mdimension/jchronic/tags/Tag.java
//

#include "J2ObjC_source.h"
#include "com/mdimension/jchronic/tags/Tag.h"
#include "java/util/Calendar.h"

@interface ComMdimensionJchronicTagsTag () {
 @public
  id _type_;
  JavaUtilCalendar *_now_;
}

@end

J2OBJC_FIELD_SETTER(ComMdimensionJchronicTagsTag, _type_, id)
J2OBJC_FIELD_SETTER(ComMdimensionJchronicTagsTag, _now_, JavaUtilCalendar *)

@implementation ComMdimensionJchronicTagsTag

- (instancetype __nonnull)initWithId:(id)type {
  ComMdimensionJchronicTagsTag_initWithId_(self, type);
  return self;
}

- (JavaUtilCalendar *)getNow {
  return _now_;
}

- (void)setTypeWithId:(id)type {
  JreStrongAssign(&_type_, type);
}

- (id)getType {
  return _type_;
}

- (void)setStartWithJavaUtilCalendar:(JavaUtilCalendar *)s {
  JreStrongAssign(&_now_, s);
}

- (void)dealloc {
  RELEASE_(_type_);
  RELEASE_(_now_);
  [super dealloc];
}

@end

void ComMdimensionJchronicTagsTag_initWithId_(ComMdimensionJchronicTagsTag *self, id type) {
  NSObject_init(self);
  JreStrongAssign(&self->_type_, type);
}

ComMdimensionJchronicTagsTag *new_ComMdimensionJchronicTagsTag_initWithId_(id type) {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicTagsTag, initWithId_, type)
}

ComMdimensionJchronicTagsTag *create_ComMdimensionJchronicTagsTag_initWithId_(id type) {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicTagsTag, initWithId_, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicTagsTag)

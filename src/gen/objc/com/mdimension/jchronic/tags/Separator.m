//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jchronic/src/main/java/com/mdimension/jchronic/tags/Separator.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/mdimension/jchronic/Options.h"
#include "com/mdimension/jchronic/tags/Separator.h"
#include "com/mdimension/jchronic/tags/SeparatorAt.h"
#include "com/mdimension/jchronic/tags/SeparatorComma.h"
#include "com/mdimension/jchronic/tags/SeparatorIn.h"
#include "com/mdimension/jchronic/tags/SeparatorSlashOrDash.h"
#include "com/mdimension/jchronic/tags/Tag.h"
#include "com/mdimension/jchronic/utils/Token.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/List.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

__attribute__((unused)) static void ComMdimensionJchronicTagsSeparator_SeparatorType_initWithNSString_withInt_(ComMdimensionJchronicTagsSeparator_SeparatorType *self, NSString *__name, jint __ordinal);

@implementation ComMdimensionJchronicTagsSeparator

- (instancetype)initWithComMdimensionJchronicTagsSeparator_SeparatorType:(ComMdimensionJchronicTagsSeparator_SeparatorType *)type {
  ComMdimensionJchronicTagsSeparator_initWithComMdimensionJchronicTagsSeparator_SeparatorType_(self, type);
  return self;
}

+ (id<JavaUtilList>)scanWithJavaUtilList:(id<JavaUtilList>)tokens
        withComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options {
  return ComMdimensionJchronicTagsSeparator_scanWithJavaUtilList_withComMdimensionJchronicOptions_(tokens, options);
}

- (NSString *)description {
  return @"separator";
}

@end

void ComMdimensionJchronicTagsSeparator_initWithComMdimensionJchronicTagsSeparator_SeparatorType_(ComMdimensionJchronicTagsSeparator *self, ComMdimensionJchronicTagsSeparator_SeparatorType *type) {
  ComMdimensionJchronicTagsTag_initWithId_(self, type);
}

ComMdimensionJchronicTagsSeparator *new_ComMdimensionJchronicTagsSeparator_initWithComMdimensionJchronicTagsSeparator_SeparatorType_(ComMdimensionJchronicTagsSeparator_SeparatorType *type) {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicTagsSeparator, initWithComMdimensionJchronicTagsSeparator_SeparatorType_, type)
}

ComMdimensionJchronicTagsSeparator *create_ComMdimensionJchronicTagsSeparator_initWithComMdimensionJchronicTagsSeparator_SeparatorType_(ComMdimensionJchronicTagsSeparator_SeparatorType *type) {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicTagsSeparator, initWithComMdimensionJchronicTagsSeparator_SeparatorType_, type)
}

id<JavaUtilList> ComMdimensionJchronicTagsSeparator_scanWithJavaUtilList_withComMdimensionJchronicOptions_(id<JavaUtilList> tokens, ComMdimensionJchronicOptions *options) {
  ComMdimensionJchronicTagsSeparator_initialize();
  for (ComMdimensionJchronicUtilsToken * __strong token in nil_chk(tokens)) {
    ComMdimensionJchronicTagsSeparator *t;
    t = ComMdimensionJchronicTagsSeparatorComma_scanWithComMdimensionJchronicUtilsToken_withComMdimensionJchronicOptions_(token, options);
    if (t != nil) {
      [((ComMdimensionJchronicUtilsToken *) nil_chk(token)) tagWithComMdimensionJchronicTagsTag:t];
    }
    t = ComMdimensionJchronicTagsSeparatorSlashOrDash_scanWithComMdimensionJchronicUtilsToken_withComMdimensionJchronicOptions_(token, options);
    if (t != nil) {
      [((ComMdimensionJchronicUtilsToken *) nil_chk(token)) tagWithComMdimensionJchronicTagsTag:t];
    }
    t = ComMdimensionJchronicTagsSeparatorAt_scanWithComMdimensionJchronicUtilsToken_withComMdimensionJchronicOptions_(token, options);
    if (t != nil) {
      [((ComMdimensionJchronicUtilsToken *) nil_chk(token)) tagWithComMdimensionJchronicTagsTag:t];
    }
    t = ComMdimensionJchronicTagsSeparatorIn_scanWithComMdimensionJchronicUtilsToken_withComMdimensionJchronicOptions_(token, options);
    if (t != nil) {
      [((ComMdimensionJchronicUtilsToken *) nil_chk(token)) tagWithComMdimensionJchronicTagsTag:t];
    }
  }
  return tokens;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicTagsSeparator)

J2OBJC_INITIALIZED_DEFN(ComMdimensionJchronicTagsSeparator_SeparatorType)

ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_values_[6];

@implementation ComMdimensionJchronicTagsSeparator_SeparatorType

+ (IOSObjectArray *)values {
  return ComMdimensionJchronicTagsSeparator_SeparatorType_values();
}

+ (ComMdimensionJchronicTagsSeparator_SeparatorType *)valueOfWithNSString:(NSString *)name {
  return ComMdimensionJchronicTagsSeparator_SeparatorType_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [ComMdimensionJchronicTagsSeparator_SeparatorType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 6 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"COMMA", @"DASH", @"SLASH", @"AT", @"NEWLINE", @"IN",
    };
    for (jint i = 0; i < 6; i++) {
      (ComMdimensionJchronicTagsSeparator_SeparatorType_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      ComMdimensionJchronicTagsSeparator_SeparatorType_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(ComMdimensionJchronicTagsSeparator_SeparatorType)
  }
}

@end

void ComMdimensionJchronicTagsSeparator_SeparatorType_initWithNSString_withInt_(ComMdimensionJchronicTagsSeparator_SeparatorType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComMdimensionJchronicTagsSeparator_SeparatorType_values() {
  ComMdimensionJchronicTagsSeparator_SeparatorType_initialize();
  return [IOSObjectArray arrayWithObjects:ComMdimensionJchronicTagsSeparator_SeparatorType_values_ count:6 type:ComMdimensionJchronicTagsSeparator_SeparatorType_class_()];
}

ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_valueOfWithNSString_(NSString *name) {
  ComMdimensionJchronicTagsSeparator_SeparatorType_initialize();
  for (int i = 0; i < 6; i++) {
    ComMdimensionJchronicTagsSeparator_SeparatorType *e = ComMdimensionJchronicTagsSeparator_SeparatorType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_fromOrdinal(NSUInteger ordinal) {
  ComMdimensionJchronicTagsSeparator_SeparatorType_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return ComMdimensionJchronicTagsSeparator_SeparatorType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicTagsSeparator_SeparatorType)

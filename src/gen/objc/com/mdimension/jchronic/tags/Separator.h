//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jchronic/src/main/java/com/mdimension/jchronic/tags/Separator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComMdimensionJchronicTagsSeparator")
#ifdef RESTRICT_ComMdimensionJchronicTagsSeparator
#define INCLUDE_ALL_ComMdimensionJchronicTagsSeparator 0
#else
#define INCLUDE_ALL_ComMdimensionJchronicTagsSeparator 1
#endif
#undef RESTRICT_ComMdimensionJchronicTagsSeparator

#if !defined (ComMdimensionJchronicTagsSeparator_) && (INCLUDE_ALL_ComMdimensionJchronicTagsSeparator || defined(INCLUDE_ComMdimensionJchronicTagsSeparator))
#define ComMdimensionJchronicTagsSeparator_

#define RESTRICT_ComMdimensionJchronicTagsTag 1
#define INCLUDE_ComMdimensionJchronicTagsTag 1
#include "com/mdimension/jchronic/tags/Tag.h"

@class ComMdimensionJchronicOptions;
@class ComMdimensionJchronicTagsSeparator_SeparatorType;
@protocol JavaUtilList;

@interface ComMdimensionJchronicTagsSeparator : ComMdimensionJchronicTagsTag

#pragma mark Public

- (instancetype)initWithComMdimensionJchronicTagsSeparator_SeparatorType:(ComMdimensionJchronicTagsSeparator_SeparatorType *)type;

- (ComMdimensionJchronicTagsSeparator_SeparatorType *)getType;

+ (id<JavaUtilList>)scanWithJavaUtilList:(id<JavaUtilList>)tokens
        withComMdimensionJchronicOptions:(ComMdimensionJchronicOptions *)options;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ComMdimensionJchronicTagsSeparator)

FOUNDATION_EXPORT void ComMdimensionJchronicTagsSeparator_initWithComMdimensionJchronicTagsSeparator_SeparatorType_(ComMdimensionJchronicTagsSeparator *self, ComMdimensionJchronicTagsSeparator_SeparatorType *type);

FOUNDATION_EXPORT ComMdimensionJchronicTagsSeparator *new_ComMdimensionJchronicTagsSeparator_initWithComMdimensionJchronicTagsSeparator_SeparatorType_(ComMdimensionJchronicTagsSeparator_SeparatorType *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicTagsSeparator *create_ComMdimensionJchronicTagsSeparator_initWithComMdimensionJchronicTagsSeparator_SeparatorType_(ComMdimensionJchronicTagsSeparator_SeparatorType *type);

FOUNDATION_EXPORT id<JavaUtilList> ComMdimensionJchronicTagsSeparator_scanWithJavaUtilList_withComMdimensionJchronicOptions_(id<JavaUtilList> tokens, ComMdimensionJchronicOptions *options);

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicTagsSeparator)

#endif

#if !defined (ComMdimensionJchronicTagsSeparator_SeparatorType_) && (INCLUDE_ALL_ComMdimensionJchronicTagsSeparator || defined(INCLUDE_ComMdimensionJchronicTagsSeparator_SeparatorType))
#define ComMdimensionJchronicTagsSeparator_SeparatorType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComMdimensionJchronicTagsSeparator_SeparatorType_Enum) {
  ComMdimensionJchronicTagsSeparator_SeparatorType_Enum_COMMA = 0,
  ComMdimensionJchronicTagsSeparator_SeparatorType_Enum_DASH = 1,
  ComMdimensionJchronicTagsSeparator_SeparatorType_Enum_SLASH = 2,
  ComMdimensionJchronicTagsSeparator_SeparatorType_Enum_AT = 3,
  ComMdimensionJchronicTagsSeparator_SeparatorType_Enum_NEWLINE = 4,
  ComMdimensionJchronicTagsSeparator_SeparatorType_Enum_IN = 5,
};

@interface ComMdimensionJchronicTagsSeparator_SeparatorType : JavaLangEnum < NSCopying >

#pragma mark Public

+ (ComMdimensionJchronicTagsSeparator_SeparatorType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(ComMdimensionJchronicTagsSeparator_SeparatorType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_values_[];

inline ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_get_COMMA();
J2OBJC_ENUM_CONSTANT(ComMdimensionJchronicTagsSeparator_SeparatorType, COMMA)

inline ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_get_DASH();
J2OBJC_ENUM_CONSTANT(ComMdimensionJchronicTagsSeparator_SeparatorType, DASH)

inline ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_get_SLASH();
J2OBJC_ENUM_CONSTANT(ComMdimensionJchronicTagsSeparator_SeparatorType, SLASH)

inline ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_get_AT();
J2OBJC_ENUM_CONSTANT(ComMdimensionJchronicTagsSeparator_SeparatorType, AT)

inline ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_get_NEWLINE();
J2OBJC_ENUM_CONSTANT(ComMdimensionJchronicTagsSeparator_SeparatorType, NEWLINE)

inline ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_get_IN();
J2OBJC_ENUM_CONSTANT(ComMdimensionJchronicTagsSeparator_SeparatorType, IN)

FOUNDATION_EXPORT IOSObjectArray *ComMdimensionJchronicTagsSeparator_SeparatorType_values();

FOUNDATION_EXPORT ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComMdimensionJchronicTagsSeparator_SeparatorType *ComMdimensionJchronicTagsSeparator_SeparatorType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicTagsSeparator_SeparatorType)

#endif

#pragma pop_macro("INCLUDE_ALL_ComMdimensionJchronicTagsSeparator")

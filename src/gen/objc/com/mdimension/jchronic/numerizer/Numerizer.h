//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jchronic/src/main/java/com/mdimension/jchronic/numerizer/Numerizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComMdimensionJchronicNumerizerNumerizer")
#ifdef RESTRICT_ComMdimensionJchronicNumerizerNumerizer
#define INCLUDE_ALL_ComMdimensionJchronicNumerizerNumerizer 0
#else
#define INCLUDE_ALL_ComMdimensionJchronicNumerizerNumerizer 1
#endif
#undef RESTRICT_ComMdimensionJchronicNumerizerNumerizer
#ifdef INCLUDE_ComMdimensionJchronicNumerizerNumerizer_BigPrefix
#define INCLUDE_ComMdimensionJchronicNumerizerNumerizer_Prefix 1
#endif
#ifdef INCLUDE_ComMdimensionJchronicNumerizerNumerizer_TenPrefix
#define INCLUDE_ComMdimensionJchronicNumerizerNumerizer_Prefix 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComMdimensionJchronicNumerizerNumerizer_) && (INCLUDE_ALL_ComMdimensionJchronicNumerizerNumerizer || defined(INCLUDE_ComMdimensionJchronicNumerizerNumerizer))
#define ComMdimensionJchronicNumerizerNumerizer_

@class IOSObjectArray;

@interface ComMdimensionJchronicNumerizerNumerizer : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

+ (NSString *)anditionWithNSString:(NSString *)str;

+ (NSString *)numerizeWithNSString:(NSString *)str;

@end

J2OBJC_STATIC_INIT(ComMdimensionJchronicNumerizerNumerizer)

inline IOSObjectArray *ComMdimensionJchronicNumerizerNumerizer_get_DIRECT_NUMS(void);
inline IOSObjectArray *ComMdimensionJchronicNumerizerNumerizer_set_DIRECT_NUMS(IOSObjectArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ComMdimensionJchronicNumerizerNumerizer_DIRECT_NUMS;
J2OBJC_STATIC_FIELD_OBJ(ComMdimensionJchronicNumerizerNumerizer, DIRECT_NUMS, IOSObjectArray *)

inline IOSObjectArray *ComMdimensionJchronicNumerizerNumerizer_get_TEN_PREFIXES(void);
inline IOSObjectArray *ComMdimensionJchronicNumerizerNumerizer_set_TEN_PREFIXES(IOSObjectArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ComMdimensionJchronicNumerizerNumerizer_TEN_PREFIXES;
J2OBJC_STATIC_FIELD_OBJ(ComMdimensionJchronicNumerizerNumerizer, TEN_PREFIXES, IOSObjectArray *)

inline IOSObjectArray *ComMdimensionJchronicNumerizerNumerizer_get_BIG_PREFIXES(void);
inline IOSObjectArray *ComMdimensionJchronicNumerizerNumerizer_set_BIG_PREFIXES(IOSObjectArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ComMdimensionJchronicNumerizerNumerizer_BIG_PREFIXES;
J2OBJC_STATIC_FIELD_OBJ(ComMdimensionJchronicNumerizerNumerizer, BIG_PREFIXES, IOSObjectArray *)

FOUNDATION_EXPORT void ComMdimensionJchronicNumerizerNumerizer_init(ComMdimensionJchronicNumerizerNumerizer *self);

FOUNDATION_EXPORT ComMdimensionJchronicNumerizerNumerizer *new_ComMdimensionJchronicNumerizerNumerizer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicNumerizerNumerizer *create_ComMdimensionJchronicNumerizerNumerizer_init(void);

FOUNDATION_EXPORT NSString *ComMdimensionJchronicNumerizerNumerizer_numerizeWithNSString_(NSString *str);

FOUNDATION_EXPORT NSString *ComMdimensionJchronicNumerizerNumerizer_anditionWithNSString_(NSString *str);

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicNumerizerNumerizer)

#endif

#if !defined (ComMdimensionJchronicNumerizerNumerizer_DirectNum_) && (INCLUDE_ALL_ComMdimensionJchronicNumerizerNumerizer || defined(INCLUDE_ComMdimensionJchronicNumerizerNumerizer_DirectNum))
#define ComMdimensionJchronicNumerizerNumerizer_DirectNum_

@class JavaUtilRegexPattern;

@interface ComMdimensionJchronicNumerizerNumerizer_DirectNum : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)name
                              withNSString:(NSString *)number;

- (JavaUtilRegexPattern *)getName;

- (NSString *)getNumber;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComMdimensionJchronicNumerizerNumerizer_DirectNum)

FOUNDATION_EXPORT void ComMdimensionJchronicNumerizerNumerizer_DirectNum_initWithNSString_withNSString_(ComMdimensionJchronicNumerizerNumerizer_DirectNum *self, NSString *name, NSString *number);

FOUNDATION_EXPORT ComMdimensionJchronicNumerizerNumerizer_DirectNum *new_ComMdimensionJchronicNumerizerNumerizer_DirectNum_initWithNSString_withNSString_(NSString *name, NSString *number) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicNumerizerNumerizer_DirectNum *create_ComMdimensionJchronicNumerizerNumerizer_DirectNum_initWithNSString_withNSString_(NSString *name, NSString *number);

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicNumerizerNumerizer_DirectNum)

#endif

#if !defined (ComMdimensionJchronicNumerizerNumerizer_Prefix_) && (INCLUDE_ALL_ComMdimensionJchronicNumerizerNumerizer || defined(INCLUDE_ComMdimensionJchronicNumerizerNumerizer_Prefix))
#define ComMdimensionJchronicNumerizerNumerizer_Prefix_

@class JavaUtilRegexPattern;

@interface ComMdimensionJchronicNumerizerNumerizer_Prefix : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)name
                                              withLong:(jlong)number;

- (JavaUtilRegexPattern *)getName;

- (jlong)getNumber;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComMdimensionJchronicNumerizerNumerizer_Prefix)

FOUNDATION_EXPORT void ComMdimensionJchronicNumerizerNumerizer_Prefix_initWithJavaUtilRegexPattern_withLong_(ComMdimensionJchronicNumerizerNumerizer_Prefix *self, JavaUtilRegexPattern *name, jlong number);

FOUNDATION_EXPORT ComMdimensionJchronicNumerizerNumerizer_Prefix *new_ComMdimensionJchronicNumerizerNumerizer_Prefix_initWithJavaUtilRegexPattern_withLong_(JavaUtilRegexPattern *name, jlong number) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicNumerizerNumerizer_Prefix *create_ComMdimensionJchronicNumerizerNumerizer_Prefix_initWithJavaUtilRegexPattern_withLong_(JavaUtilRegexPattern *name, jlong number);

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicNumerizerNumerizer_Prefix)

#endif

#if !defined (ComMdimensionJchronicNumerizerNumerizer_TenPrefix_) && (INCLUDE_ALL_ComMdimensionJchronicNumerizerNumerizer || defined(INCLUDE_ComMdimensionJchronicNumerizerNumerizer_TenPrefix))
#define ComMdimensionJchronicNumerizerNumerizer_TenPrefix_

@class JavaUtilRegexPattern;

@interface ComMdimensionJchronicNumerizerNumerizer_TenPrefix : ComMdimensionJchronicNumerizerNumerizer_Prefix

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)name
                                  withLong:(jlong)number;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)arg0
                                              withLong:(jlong)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComMdimensionJchronicNumerizerNumerizer_TenPrefix)

FOUNDATION_EXPORT void ComMdimensionJchronicNumerizerNumerizer_TenPrefix_initWithNSString_withLong_(ComMdimensionJchronicNumerizerNumerizer_TenPrefix *self, NSString *name, jlong number);

FOUNDATION_EXPORT ComMdimensionJchronicNumerizerNumerizer_TenPrefix *new_ComMdimensionJchronicNumerizerNumerizer_TenPrefix_initWithNSString_withLong_(NSString *name, jlong number) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicNumerizerNumerizer_TenPrefix *create_ComMdimensionJchronicNumerizerNumerizer_TenPrefix_initWithNSString_withLong_(NSString *name, jlong number);

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicNumerizerNumerizer_TenPrefix)

#endif

#if !defined (ComMdimensionJchronicNumerizerNumerizer_BigPrefix_) && (INCLUDE_ALL_ComMdimensionJchronicNumerizerNumerizer || defined(INCLUDE_ComMdimensionJchronicNumerizerNumerizer_BigPrefix))
#define ComMdimensionJchronicNumerizerNumerizer_BigPrefix_

@class JavaUtilRegexPattern;

@interface ComMdimensionJchronicNumerizerNumerizer_BigPrefix : ComMdimensionJchronicNumerizerNumerizer_Prefix

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)name
                                  withLong:(jlong)number;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)arg0
                                              withLong:(jlong)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComMdimensionJchronicNumerizerNumerizer_BigPrefix)

FOUNDATION_EXPORT void ComMdimensionJchronicNumerizerNumerizer_BigPrefix_initWithNSString_withLong_(ComMdimensionJchronicNumerizerNumerizer_BigPrefix *self, NSString *name, jlong number);

FOUNDATION_EXPORT ComMdimensionJchronicNumerizerNumerizer_BigPrefix *new_ComMdimensionJchronicNumerizerNumerizer_BigPrefix_initWithNSString_withLong_(NSString *name, jlong number) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicNumerizerNumerizer_BigPrefix *create_ComMdimensionJchronicNumerizerNumerizer_BigPrefix_initWithNSString_withLong_(NSString *name, jlong number);

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicNumerizerNumerizer_BigPrefix)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComMdimensionJchronicNumerizerNumerizer")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jchronic/src/main/java/com/mdimension/jchronic/Options.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComMdimensionJchronicOptions")
#ifdef RESTRICT_ComMdimensionJchronicOptions
#define INCLUDE_ALL_ComMdimensionJchronicOptions 0
#else
#define INCLUDE_ALL_ComMdimensionJchronicOptions 1
#endif
#undef RESTRICT_ComMdimensionJchronicOptions

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComMdimensionJchronicOptions_) && (INCLUDE_ALL_ComMdimensionJchronicOptions || defined(INCLUDE_ComMdimensionJchronicOptions))
#define ComMdimensionJchronicOptions_

@class ComMdimensionJchronicTagsPointer_PointerType;
@class JavaUtilCalendar;

@interface ComMdimensionJchronicOptions : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithBoolean:(jboolean)guess;

- (instancetype __nonnull)initWithJavaUtilCalendar:(JavaUtilCalendar *)now;

- (instancetype __nonnull)initWithJavaUtilCalendar:(JavaUtilCalendar *)now
                                       withBoolean:(jboolean)guess;

- (instancetype __nonnull)initWithInt:(jint)ambiguousTimeRange;

- (instancetype __nonnull)initWithComMdimensionJchronicTagsPointer_PointerType:(ComMdimensionJchronicTagsPointer_PointerType *)context;

- (instancetype __nonnull)initWithComMdimensionJchronicTagsPointer_PointerType:(ComMdimensionJchronicTagsPointer_PointerType *)context
                                                          withJavaUtilCalendar:(JavaUtilCalendar *)now
                                                                   withBoolean:(jboolean)guess
                                                                       withInt:(jint)ambiguousTimeRange;

- (jint)getAmbiguousTimeRange;

- (ComMdimensionJchronicTagsPointer_PointerType *)getContext;

- (JavaUtilCalendar *)getNow;

- (jboolean)isCompatibilityMode;

- (jboolean)isDebug;

- (jboolean)isGuess;

- (void)setAmbiguousTimeRangeWithInt:(jint)ambiguousTimeRange;

- (void)setCompatibilityModeWithBoolean:(jboolean)compatibilityMode;

- (void)setContextWithComMdimensionJchronicTagsPointer_PointerType:(ComMdimensionJchronicTagsPointer_PointerType *)context;

- (void)setDebugWithBoolean:(jboolean)debug;

- (void)setGuessWithBoolean:(jboolean)guess;

- (void)setNowWithJavaUtilCalendar:(JavaUtilCalendar *)now;

@end

J2OBJC_EMPTY_STATIC_INIT(ComMdimensionJchronicOptions)

FOUNDATION_EXPORT void ComMdimensionJchronicOptions_init(ComMdimensionJchronicOptions *self);

FOUNDATION_EXPORT ComMdimensionJchronicOptions *new_ComMdimensionJchronicOptions_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicOptions *create_ComMdimensionJchronicOptions_init(void);

FOUNDATION_EXPORT void ComMdimensionJchronicOptions_initWithJavaUtilCalendar_(ComMdimensionJchronicOptions *self, JavaUtilCalendar *now);

FOUNDATION_EXPORT ComMdimensionJchronicOptions *new_ComMdimensionJchronicOptions_initWithJavaUtilCalendar_(JavaUtilCalendar *now) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicOptions *create_ComMdimensionJchronicOptions_initWithJavaUtilCalendar_(JavaUtilCalendar *now);

FOUNDATION_EXPORT void ComMdimensionJchronicOptions_initWithJavaUtilCalendar_withBoolean_(ComMdimensionJchronicOptions *self, JavaUtilCalendar *now, jboolean guess);

FOUNDATION_EXPORT ComMdimensionJchronicOptions *new_ComMdimensionJchronicOptions_initWithJavaUtilCalendar_withBoolean_(JavaUtilCalendar *now, jboolean guess) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicOptions *create_ComMdimensionJchronicOptions_initWithJavaUtilCalendar_withBoolean_(JavaUtilCalendar *now, jboolean guess);

FOUNDATION_EXPORT void ComMdimensionJchronicOptions_initWithComMdimensionJchronicTagsPointer_PointerType_(ComMdimensionJchronicOptions *self, ComMdimensionJchronicTagsPointer_PointerType *context);

FOUNDATION_EXPORT ComMdimensionJchronicOptions *new_ComMdimensionJchronicOptions_initWithComMdimensionJchronicTagsPointer_PointerType_(ComMdimensionJchronicTagsPointer_PointerType *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicOptions *create_ComMdimensionJchronicOptions_initWithComMdimensionJchronicTagsPointer_PointerType_(ComMdimensionJchronicTagsPointer_PointerType *context);

FOUNDATION_EXPORT void ComMdimensionJchronicOptions_initWithBoolean_(ComMdimensionJchronicOptions *self, jboolean guess);

FOUNDATION_EXPORT ComMdimensionJchronicOptions *new_ComMdimensionJchronicOptions_initWithBoolean_(jboolean guess) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicOptions *create_ComMdimensionJchronicOptions_initWithBoolean_(jboolean guess);

FOUNDATION_EXPORT void ComMdimensionJchronicOptions_initWithInt_(ComMdimensionJchronicOptions *self, jint ambiguousTimeRange);

FOUNDATION_EXPORT ComMdimensionJchronicOptions *new_ComMdimensionJchronicOptions_initWithInt_(jint ambiguousTimeRange) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicOptions *create_ComMdimensionJchronicOptions_initWithInt_(jint ambiguousTimeRange);

FOUNDATION_EXPORT void ComMdimensionJchronicOptions_initWithComMdimensionJchronicTagsPointer_PointerType_withJavaUtilCalendar_withBoolean_withInt_(ComMdimensionJchronicOptions *self, ComMdimensionJchronicTagsPointer_PointerType *context, JavaUtilCalendar *now, jboolean guess, jint ambiguousTimeRange);

FOUNDATION_EXPORT ComMdimensionJchronicOptions *new_ComMdimensionJchronicOptions_initWithComMdimensionJchronicTagsPointer_PointerType_withJavaUtilCalendar_withBoolean_withInt_(ComMdimensionJchronicTagsPointer_PointerType *context, JavaUtilCalendar *now, jboolean guess, jint ambiguousTimeRange) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicOptions *create_ComMdimensionJchronicOptions_initWithComMdimensionJchronicTagsPointer_PointerType_withJavaUtilCalendar_withBoolean_withInt_(ComMdimensionJchronicTagsPointer_PointerType *context, JavaUtilCalendar *now, jboolean guess, jint ambiguousTimeRange);

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicOptions)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComMdimensionJchronicOptions")

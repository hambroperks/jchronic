//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/jchronic/src/main/java/com/mdimension/jchronic/repeaters/RepeaterSecond.java
//

#include "J2ObjC_source.h"
#include "com/mdimension/jchronic/repeaters/RepeaterSecond.h"
#include "com/mdimension/jchronic/repeaters/RepeaterUnit.h"
#include "com/mdimension/jchronic/tags/Pointer.h"
#include "com/mdimension/jchronic/utils/Span.h"
#include "com/mdimension/jchronic/utils/Time.h"
#include "java/util/Calendar.h"

@interface ComMdimensionJchronicRepeatersRepeaterSecond () {
 @public
  JavaUtilCalendar *_secondStart_;
}

@end

J2OBJC_FIELD_SETTER(ComMdimensionJchronicRepeatersRepeaterSecond, _secondStart_, JavaUtilCalendar *)

@implementation ComMdimensionJchronicRepeatersRepeaterSecond

- (ComMdimensionJchronicUtilsSpan *)_nextSpanWithComMdimensionJchronicTagsPointer_PointerType:(ComMdimensionJchronicTagsPointer_PointerType *)pointer {
  jint direction = (pointer == JreLoadEnum(ComMdimensionJchronicTagsPointer_PointerType, FUTURE)) ? 1 : -1;
  if (_secondStart_ == nil) {
    JreStrongAssign(&_secondStart_, ComMdimensionJchronicUtilsTime_cloneAndAddWithJavaUtilCalendar_withInt_withLong_([self getNow], JavaUtilCalendar_SECOND, direction));
  }
  else {
    [_secondStart_ addWithInt:JavaUtilCalendar_SECOND withInt:direction];
  }
  return create_ComMdimensionJchronicUtilsSpan_initWithJavaUtilCalendar_withInt_withLong_(_secondStart_, JavaUtilCalendar_SECOND, 1);
}

- (ComMdimensionJchronicUtilsSpan *)_thisSpanWithComMdimensionJchronicTagsPointer_PointerType:(ComMdimensionJchronicTagsPointer_PointerType *)pointer {
  return create_ComMdimensionJchronicUtilsSpan_initWithJavaUtilCalendar_withInt_withLong_([self getNow], JavaUtilCalendar_SECOND, 1);
}

- (ComMdimensionJchronicUtilsSpan *)getOffsetWithComMdimensionJchronicUtilsSpan:(ComMdimensionJchronicUtilsSpan *)span
                                                                        withInt:(jint)amount
                               withComMdimensionJchronicTagsPointer_PointerType:(ComMdimensionJchronicTagsPointer_PointerType *)pointer {
  jint direction = (pointer == JreLoadEnum(ComMdimensionJchronicTagsPointer_PointerType, FUTURE)) ? 1 : -1;
  return [((ComMdimensionJchronicUtilsSpan *) nil_chk(span)) addWithLong:direction * amount * ComMdimensionJchronicRepeatersRepeaterSecond_SECOND_SECONDS];
}

- (jint)getWidth {
  return ComMdimensionJchronicRepeatersRepeaterSecond_SECOND_SECONDS;
}

- (NSString *)description {
  return JreStrcat("$$", [super description], @"-second");
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComMdimensionJchronicRepeatersRepeaterSecond_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(_secondStart_);
  [super dealloc];
}

@end

void ComMdimensionJchronicRepeatersRepeaterSecond_init(ComMdimensionJchronicRepeatersRepeaterSecond *self) {
  ComMdimensionJchronicRepeatersRepeaterUnit_init(self);
}

ComMdimensionJchronicRepeatersRepeaterSecond *new_ComMdimensionJchronicRepeatersRepeaterSecond_init() {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicRepeatersRepeaterSecond, init)
}

ComMdimensionJchronicRepeatersRepeaterSecond *create_ComMdimensionJchronicRepeatersRepeaterSecond_init() {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicRepeatersRepeaterSecond, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicRepeatersRepeaterSecond)

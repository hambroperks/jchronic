//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jchronic/src/test/java/com/mdimension/jchronic/HandlerTestCase.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComMdimensionJchronicHandlerTestCase")
#ifdef RESTRICT_ComMdimensionJchronicHandlerTestCase
#define INCLUDE_ALL_ComMdimensionJchronicHandlerTestCase 0
#else
#define INCLUDE_ALL_ComMdimensionJchronicHandlerTestCase 1
#endif
#undef RESTRICT_ComMdimensionJchronicHandlerTestCase

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComMdimensionJchronicHandlerTestCase_) && (INCLUDE_ALL_ComMdimensionJchronicHandlerTestCase || defined(INCLUDE_ComMdimensionJchronicHandlerTestCase))
#define ComMdimensionJchronicHandlerTestCase_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

@interface ComMdimensionJchronicHandlerTestCase : JunitFrameworkTestCase

#pragma mark Public

- (instancetype __nonnull)init;

- (void)testHandlerClass1;

- (void)testHandlerClass2;

- (void)testHandlerClass3;

- (void)testHandlerClass4;

- (void)testHandlerClass5;

- (void)testHandlerClass6;

#pragma mark Protected

- (void)setUp;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComMdimensionJchronicHandlerTestCase)

FOUNDATION_EXPORT void ComMdimensionJchronicHandlerTestCase_init(ComMdimensionJchronicHandlerTestCase *self);

FOUNDATION_EXPORT ComMdimensionJchronicHandlerTestCase *new_ComMdimensionJchronicHandlerTestCase_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComMdimensionJchronicHandlerTestCase *create_ComMdimensionJchronicHandlerTestCase_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComMdimensionJchronicHandlerTestCase)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComMdimensionJchronicHandlerTestCase")

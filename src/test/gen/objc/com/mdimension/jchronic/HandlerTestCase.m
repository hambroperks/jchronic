//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jchronic/src/test/java/com/mdimension/jchronic/HandlerTestCase.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/mdimension/jchronic/HandlerTestCase.h"
#include "com/mdimension/jchronic/handlers/DummyHandler.h"
#include "com/mdimension/jchronic/handlers/Handler.h"
#include "com/mdimension/jchronic/handlers/HandlerPattern.h"
#include "com/mdimension/jchronic/handlers/HandlerTypePattern.h"
#include "com/mdimension/jchronic/handlers/TagPattern.h"
#include "com/mdimension/jchronic/repeaters/EnumRepeaterDayPortion.h"
#include "com/mdimension/jchronic/repeaters/Repeater.h"
#include "com/mdimension/jchronic/repeaters/RepeaterDayName.h"
#include "com/mdimension/jchronic/repeaters/RepeaterDayPortion.h"
#include "com/mdimension/jchronic/repeaters/RepeaterMonthName.h"
#include "com/mdimension/jchronic/repeaters/RepeaterTime.h"
#include "com/mdimension/jchronic/repeaters/RepeaterYear.h"
#include "com/mdimension/jchronic/tags/Pointer.h"
#include "com/mdimension/jchronic/tags/Scalar.h"
#include "com/mdimension/jchronic/tags/ScalarDay.h"
#include "com/mdimension/jchronic/utils/Time.h"
#include "com/mdimension/jchronic/utils/Token.h"
#include "java/lang/Integer.h"
#include "java/util/Calendar.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "junit/framework/TestCase.h"

@interface ComMdimensionJchronicHandlerTestCase () {
 @public
  JavaUtilCalendar *_now_;
}

@end

J2OBJC_FIELD_SETTER(ComMdimensionJchronicHandlerTestCase, _now_, JavaUtilCalendar *)

@implementation ComMdimensionJchronicHandlerTestCase

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComMdimensionJchronicHandlerTestCase_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssign(&_now_, ComMdimensionJchronicUtilsTime_constructWithInt_withInt_withInt_withInt_withInt_withInt_withInt_(2006, 8, 16, 14, 0, 0, 0));
}

- (void)testHandlerClass1 {
  ComMdimensionJchronicHandlersHandler *handler = create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersDummyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()) } count:1 type:ComMdimensionJchronicHandlersHandlerPattern_class_()]);
  id<JavaUtilList> tokens = create_JavaUtilLinkedList_init();
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"friday")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:0])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersRepeaterDayName_initWithComMdimensionJchronicRepeatersRepeaterDayName_DayName_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayName_DayName, FRIDAY))];
  JunitFrameworkTestCase_assertTrueWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"afternoon")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:1])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersEnumRepeaterDayPortion_initWithComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion, AFTERNOON))];
  JunitFrameworkTestCase_assertFalseWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
}

- (void)testHandlerClass2 {
  ComMdimensionJchronicHandlersHandler *handler = create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersDummyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_withBoolean_(ComMdimensionJchronicRepeatersRepeater_class_(), true) } count:2 type:ComMdimensionJchronicHandlersHandlerPattern_class_()]);
  id<JavaUtilList> tokens = create_JavaUtilLinkedList_init();
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"friday")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:0])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersRepeaterDayName_initWithComMdimensionJchronicRepeatersRepeaterDayName_DayName_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayName_DayName, FRIDAY))];
  JunitFrameworkTestCase_assertTrueWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"afternoon")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:1])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersEnumRepeaterDayPortion_initWithComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion, AFTERNOON))];
  JunitFrameworkTestCase_assertTrueWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"afternoon")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:2])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersEnumRepeaterDayPortion_initWithComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion, AFTERNOON))];
  JunitFrameworkTestCase_assertFalseWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
}

- (void)testHandlerClass3 {
  ComMdimensionJchronicHandlersHandler *handler = create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersDummyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME), true) } count:2 type:ComMdimensionJchronicHandlersHandlerPattern_class_()]);
  id<JavaUtilList> tokens = create_JavaUtilLinkedList_init();
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"friday")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:0])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersRepeaterDayName_initWithComMdimensionJchronicRepeatersRepeaterDayName_DayName_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayName_DayName, FRIDAY))];
  JunitFrameworkTestCase_assertTrueWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"afternoon")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:1])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersEnumRepeaterDayPortion_initWithComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion, AFTERNOON))];
  JunitFrameworkTestCase_assertFalseWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
}

- (void)testHandlerClass4 {
  ComMdimensionJchronicHandlersHandler *handler = create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersDummyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeaterMonthName_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalarDay_class_()), create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME), true) } count:3 type:ComMdimensionJchronicHandlersHandlerPattern_class_()]);
  id<JavaUtilList> tokens = create_JavaUtilLinkedList_init();
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"may")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:0])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersRepeaterMonthName_initWithComMdimensionJchronicRepeatersRepeaterMonthName_MonthName_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterMonthName_MonthName, MAY))];
  JunitFrameworkTestCase_assertFalseWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"27")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:1])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicTagsScalarDay_initWithJavaLangInteger_(JavaLangInteger_valueOfWithInt_(27))];
  JunitFrameworkTestCase_assertTrueWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
}

- (void)testHandlerClass5 {
  ComMdimensionJchronicHandlersHandler *handler = create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersDummyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersHandlerTypePattern_initWithComMdimensionJchronicHandlersHandler_HandlerType_withBoolean_(JreLoadEnum(ComMdimensionJchronicHandlersHandler_HandlerType, TIME), true) } count:2 type:ComMdimensionJchronicHandlersHandlerPattern_class_()]);
  id<JavaUtilList> tokens = create_JavaUtilLinkedList_init();
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"friday")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:0])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersRepeaterDayName_initWithComMdimensionJchronicRepeatersRepeaterDayName_DayName_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayName_DayName, FRIDAY))];
  JunitFrameworkTestCase_assertTrueWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"5:00")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:1])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersRepeaterTime_initWithNSString_(@"5:00")];
  JunitFrameworkTestCase_assertTrueWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"pm")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:2])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersEnumRepeaterDayPortion_initWithComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion_(JreLoadEnum(ComMdimensionJchronicRepeatersRepeaterDayPortion_DayPortion, PM))];
  JunitFrameworkTestCase_assertTrueWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
}

- (void)testHandlerClass6 {
  ComMdimensionJchronicHandlersHandler *handler = create_ComMdimensionJchronicHandlersHandler_initWithComMdimensionJchronicHandlersIHandler_withComMdimensionJchronicHandlersHandlerPatternArray_(create_ComMdimensionJchronicHandlersDummyHandler_init(), [IOSObjectArray arrayWithObjects:(id[]){ create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsScalar_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicRepeatersRepeater_class_()), create_ComMdimensionJchronicHandlersTagPattern_initWithIOSClass_(ComMdimensionJchronicTagsPointer_class_()) } count:3 type:ComMdimensionJchronicHandlersHandlerPattern_class_()]);
  id<JavaUtilList> tokens = create_JavaUtilLinkedList_init();
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"3")];
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"years")];
  [tokens addWithId:create_ComMdimensionJchronicUtilsToken_initWithNSString_(@"past")];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:0])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicTagsScalar_initWithJavaLangInteger_(JavaLangInteger_valueOfWithInt_(3))];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:1])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicRepeatersRepeaterYear_init()];
  [((ComMdimensionJchronicUtilsToken *) nil_chk([tokens getWithInt:2])) tagWithComMdimensionJchronicTagsTag:create_ComMdimensionJchronicTagsPointer_initWithComMdimensionJchronicTagsPointer_PointerType_(JreLoadEnum(ComMdimensionJchronicTagsPointer_PointerType, PAST))];
  JunitFrameworkTestCase_assertTrueWithBoolean_([handler matchWithJavaUtilList:tokens withJavaUtilMap:ComMdimensionJchronicHandlersHandler_definitions()]);
}

- (void)dealloc {
  RELEASE_(_now_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(testHandlerClass1);
  methods[3].selector = @selector(testHandlerClass2);
  methods[4].selector = @selector(testHandlerClass3);
  methods[5].selector = @selector(testHandlerClass4);
  methods[6].selector = @selector(testHandlerClass5);
  methods[7].selector = @selector(testHandlerClass6);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_now_", "LJavaUtilCalendar;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;" };
  static const J2ObjcClassInfo _ComMdimensionJchronicHandlerTestCase = { "HandlerTestCase", "com.mdimension.jchronic", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, -1, -1 };
  return &_ComMdimensionJchronicHandlerTestCase;
}

@end

void ComMdimensionJchronicHandlerTestCase_init(ComMdimensionJchronicHandlerTestCase *self) {
  JunitFrameworkTestCase_init(self);
}

ComMdimensionJchronicHandlerTestCase *new_ComMdimensionJchronicHandlerTestCase_init() {
  J2OBJC_NEW_IMPL(ComMdimensionJchronicHandlerTestCase, init)
}

ComMdimensionJchronicHandlerTestCase *create_ComMdimensionJchronicHandlerTestCase_init() {
  J2OBJC_CREATE_IMPL(ComMdimensionJchronicHandlerTestCase, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMdimensionJchronicHandlerTestCase)
